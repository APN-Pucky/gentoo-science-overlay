diff -Naur ARPACK/BLAS/Makefile.am ARPACK.new/BLAS/Makefile.am
--- ARPACK/BLAS/Makefile.am	1970-01-01 01:00:00.000000000 +0100
+++ ARPACK.new/BLAS/Makefile.am	2006-06-06 13:18:38.060734440 +0100
@@ -0,0 +1,19 @@
+noinst_LTLIBRARIES = libarpackblas.la
+
+libarpackblas_la_SOURCES = \
+	isamax.f sasum.f saxpy.f scopy.f sdot.f  snrm2.f srot.f  srotg.f \
+        sscal.f  sswap.f sgemv.f sger.f  ssymv.f ssyr2.f strmm.f sgbmv.f \
+	idamax.f dasum.f daxpy.f dcopy.f ddot.f  dnrm2.f drot.f  drotg.f \
+        dscal.f  dswap.f dgemv.f dger.f  dsymv.f dsyr2.f dtrmm.f dgbmv.f \
+	icamax.f caxpy.f ccopy.f cdotc.f cdotu.f cgbmv.f  cgemv.f cgerc.f \
+        cgeru.f  cscal.f csscal.f cswap.f ctrmm.f ctrsv.f scasum.f scnrm2.f \
+        isamax.f sscal.f \
+	izamax.f zaxpy.f zcopy.f zdotc.f zdotu.f zgbmv.f  zgemv.f zgerc.f \
+        zgeru.f zscal.f zdscal.f zswap.f ztrmm.f ztrsv.f dzasum.f dznrm2.f \
+        idamax.f dscal.f \
+	sgemm.f strsm.f stbsv.f \
+	dgemm.f dtrsm.f dtbsv.f \
+	ccopy.f cgemv.f cgeru.f cgemm.f cscal.f cswap.f ctrsm.f ctbsv.f \
+	icamax.f \
+	zcopy.f zgemv.f zgeru.f zgemm.f zscal.f zswap.f ztrsm.f ztbsv.f \
+	izamax.f
diff -Naur ARPACK/LAPACK/Makefile.am ARPACK.new/LAPACK/Makefile.am
--- ARPACK/LAPACK/Makefile.am	1970-01-01 01:00:00.000000000 +0100
+++ ARPACK.new/LAPACK/Makefile.am	2006-06-06 13:20:35.344904536 +0100
@@ -0,0 +1,31 @@
+noinst_LTLIBRARIES = libarpacklapack.la
+libarpacklapack_la_SOURCES = \
+	sgeqr2.f slabad.f slacon.f slacpy.f sladiv.f slae2.f slaev2.f \
+        slaexc.f slagtm.f slahqr.f slaln2.f slamch.f slange.f slanhs.f \
+        slanst.f slanv2.f slaptm.f slapy2.f slapy3.f slaran.f slarf.f \
+        slarfg.f slarfx.f slarnd.f slarnv.f slartg.f slaruv.f slascl.f \
+        slaset.f slasr.f  slasrt.f slassq.f slasy2.f sorm2r.f ssteqr.f \
+        strevc.f strexc.f strsen.f strsyl.f \
+	dgeqr2.f dlabad.f dlacon.f dlacpy.f dladiv.f dlae2.f dlaev2.f \
+        dlaexc.f dlagtm.f dlahqr.f dlaln2.f dlamch.f dlange.f dlanhs.f \
+        dlanst.f dlanv2.f dlaptm.f dlapy2.f dlapy3.f dlaran.f dlarf.f \
+        dlarfg.f dlarfx.f dlarnd.f dlarnv.f dlartg.f dlaruv.f dlascl.f \
+        dlaset.f dlasr.f  dlasrt.f dlassq.f dlasy2.f dorm2r.f dsteqr.f \
+        dtrevc.f dtrexc.f dtrsen.f dtrsyl.f \
+	ilaenv.f lsame.f lsamen.f xerbla.f xlaenv.f \
+	icmax1.f izmax1.f \
+	cgeqr2.f clacon.f clacpy.f cladiv.f clahqr.f clange.f clanhs.f \
+        clarf.f  clarfg.f clarnv.f clartg.f clascl.f claset.f classq.f \
+        clatrs.f cmach.f  crot.f   ctrevc.f ctrexc.f ctrsen.f ctrsyl.f \
+        cunm2r.f scsum1.f \
+	zgeqr2.f zlacon.f zlacpy.f zladiv.f zlahqr.f zlange.f zlanhs.f \
+        zlarf.f  zlarfg.f zlarnv.f zlartg.f zlascl.f zlaset.f zlassq.f \
+        zlatrs.f zmach.f  zrot.f   ztrevc.f ztrexc.f ztrsen.f ztrsyl.f \
+        zunm2r.f dzsum1.f \
+	sgbtf2.f sgbtrf.f sgbtrs.f sgttrf.f sgttrs.f spttrf.f spttrs.f \
+	slaswp.f \
+	dgbtf2.f dgbtrf.f dgbtrs.f dgttrf.f dgttrs.f dpttrf.f dpttrs.f \
+	dlaswp.f \
+	cgbtf2.f cgbtrf.f cgbtrs.f cgttrf.f cgttrs.f claswp.f clacgv.f \
+	zgbtrf.f zgbtrs.f zgbtf2.f zgttrf.f zgttrs.f zlaswp.f zlacgv.f
+
diff -Naur ARPACK/Makefile.am ARPACK.new/Makefile.am
--- ARPACK/Makefile.am	1970-01-01 01:00:00.000000000 +0100
+++ ARPACK.new/Makefile.am	2006-06-06 13:09:46.480546912 +0100
@@ -0,0 +1,6 @@
+SUBDIRS = @BLASDIR@ LAPACK UTIL SRC @MPIDIR@
+SUBLIBS = @BLASLIB@ LAPACK/libarpacklapack.la SRC/libarpacksrc.la UTIL/libarpackutil.la
+lib_LTLIBRARIES = libarpack.la
+libarpack_la_SOURCES =
+libarpack_la_LIBADD = $(SUBLIBS) @BLAS_LIBS@
+EXTRA_DIST = README
diff -Naur ARPACK/PARPACK/Makefile.am ARPACK.new/PARPACK/Makefile.am
--- ARPACK/PARPACK/Makefile.am	1970-01-01 01:00:00.000000000 +0100
+++ ARPACK.new/PARPACK/Makefile.am	2006-06-06 12:26:23.238299888 +0100
@@ -0,0 +1,5 @@
+SUBDIRS = UTIL SRC
+SUBLIBS = SRC/MPI/libparpacksrcmpi.la UTIL/MPI/libparpackutilmpi.la
+lib_LTLIBRARIES = libparpack.la
+libparpack_la_SOURCES = 
+libparpack_la_LIBADD = $(SUBLIBS) @MPILIBS@
diff -Naur ARPACK/PARPACK/SRC/MPI/Makefile.am ARPACK.new/PARPACK/SRC/MPI/Makefile.am
--- ARPACK/PARPACK/SRC/MPI/Makefile.am	1970-01-01 01:00:00.000000000 +0100
+++ ARPACK.new/PARPACK/SRC/MPI/Makefile.am	2006-06-06 10:03:18.000000000 +0100
@@ -0,0 +1,14 @@
+noinst_LTLIBRARIES = libparpacksrcmpi.la
+libparpacksrcmpi_la_SOURCES = \
+	psgetv0.f  \
+	psnaitr.f psnapps.f psnaup2.f psnaupd.f psneigh.f psngets.f \
+	pssaitr.f pssapps.f pssaup2.f pssaupd.f psseigt.f pssgets.f \
+	psneupd.f psseupd.f pslarnv.f pslamch.f psnorm2.f \
+	pdgetv0.f \
+	pdnaitr.f pdnapps.f pdnaup2.f pdnaupd.f pdneigh.f pdngets.f \
+	pdsaitr.f pdsapps.f pdsaup2.f pdsaupd.f pdseigt.f pdsgets.f \
+	pdneupd.f pdseupd.f pdlarnv.f pdlamch.f pdnorm2.f \
+	pcnaitr.f pcnapps.f pcnaup2.f pcnaupd.f pcneigh.f \
+	pcneupd.f pcngets.f pcgetv0.f pscnorm2.f pclarnv.f \
+	pznaitr.f pznapps.f pznaup2.f pznaupd.f pzneigh.f \
+	pzneupd.f pzngets.f pzgetv0.f pdznorm2.f pzlarnv.f
diff -Naur ARPACK/PARPACK/SRC/Makefile.am ARPACK.new/PARPACK/SRC/Makefile.am
--- ARPACK/PARPACK/SRC/Makefile.am	1970-01-01 01:00:00.000000000 +0100
+++ ARPACK.new/PARPACK/SRC/Makefile.am	2006-06-06 08:41:11.000000000 +0100
@@ -0,0 +1 @@
+SUBDIRS = MPI
diff -Naur ARPACK/PARPACK/UTIL/MPI/Makefile.am ARPACK.new/PARPACK/UTIL/MPI/Makefile.am
--- ARPACK/PARPACK/UTIL/MPI/Makefile.am	1970-01-01 01:00:00.000000000 +0100
+++ ARPACK.new/PARPACK/UTIL/MPI/Makefile.am	2006-06-06 10:03:46.000000000 +0100
@@ -0,0 +1,5 @@
+noinst_LTLIBRARIES = libparpackutilmpi.la
+libparpackutilmpi_la_SOURCES = \
+	pivout.f psvout.f  psmout.f pdvout.f \
+	pdmout.f  pcvout.f  pcmout.f pzvout.f  pzmout.f
+
diff -Naur ARPACK/PARPACK/UTIL/Makefile.am ARPACK.new/PARPACK/UTIL/Makefile.am
--- ARPACK/PARPACK/UTIL/Makefile.am	1970-01-01 01:00:00.000000000 +0100
+++ ARPACK.new/PARPACK/UTIL/Makefile.am	2006-06-06 08:41:14.000000000 +0100
@@ -0,0 +1 @@
+SUBDIRS = MPI
\ No newline at end of file
diff -Naur ARPACK/SRC/Makefile.am ARPACK.new/SRC/Makefile.am
--- ARPACK/SRC/Makefile.am	1970-01-01 01:00:00.000000000 +0100
+++ ARPACK.new/SRC/Makefile.am	2006-06-06 08:39:46.000000000 +0100
@@ -0,0 +1,14 @@
+noinst_LTLIBRARIES = libarpacksrc.la
+libarpacksrc_la_SOURCES = \
+	sgetv0.f slaqrb.f sstqrb.f ssortc.f ssortr.f sstatn.f sstats.f \
+	snaitr.f snapps.f snaup2.f snaupd.f snconv.f sneigh.f sngets.f \
+	ssaitr.f ssapps.f ssaup2.f ssaupd.f ssconv.f sseigt.f ssgets.f \
+	sneupd.f sseupd.f ssesrt.f \
+	dgetv0.f dlaqrb.f dstqrb.f dsortc.f dsortr.f dstatn.f dstats.f \
+	dnaitr.f dnapps.f dnaup2.f dnaupd.f dnconv.f dneigh.f dngets.f \
+	dsaitr.f dsapps.f dsaup2.f dsaupd.f dsconv.f dseigt.f dsgets.f \
+	dneupd.f dseupd.f dsesrt.f \
+	cnaitr.f cnapps.f cnaup2.f cnaupd.f cneigh.f cneupd.f cngets.f \
+        cgetv0.f csortc.f cstatn.f \
+	znaitr.f znapps.f znaup2.f znaupd.f zneigh.f zneupd.f zngets.f \
+        zgetv0.f zsortc.f zstatn.f
diff -Naur ARPACK/UTIL/Makefile.am ARPACK.new/UTIL/Makefile.am
--- ARPACK/UTIL/Makefile.am	1970-01-01 01:00:00.000000000 +0100
+++ ARPACK.new/UTIL/Makefile.am	2006-06-06 08:39:18.000000000 +0100
@@ -0,0 +1,5 @@
+noinst_LTLIBRARIES = libarpackutil.la
+libarpackutil_la_SOURCES = \
+	icnteq.f icopy.f iset.f iswap.f ivout.f second.f \
+	svout.f  smout.f dvout.f  dmout.f cvout.f  cmout.f \
+	zvout.f  zmout.f
diff -Naur ARPACK/acx_blas.m4 ARPACK.new/acx_blas.m4
--- ARPACK/acx_blas.m4	1970-01-01 01:00:00.000000000 +0100
+++ ARPACK.new/acx_blas.m4	2006-06-06 08:41:23.000000000 +0100
@@ -0,0 +1,153 @@
+dnl @synopsis ACX_BLAS([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])
+dnl
+dnl This macro looks for a library that implements the BLAS
+dnl linear-algebra interface (see http://www.netlib.org/blas/). On
+dnl success, it sets the BLAS_LIBS output variable to hold the
+dnl requisite library linkages.
+dnl
+dnl To link with BLAS, you should link with:
+dnl
+dnl 	$BLAS_LIBS $LIBS $FLIBS
+dnl
+dnl in that order. FLIBS is the output variable of the
+dnl AC_F77_LIBRARY_LDFLAGS macro (called if necessary by ACX_BLAS), and
+dnl is sometimes necessary in order to link with F77 libraries. Users
+dnl will also need to use AC_F77_DUMMY_MAIN (see the autoconf manual),
+dnl for the same reason.
+dnl
+dnl Many libraries are searched for, from ATLAS to CXML to ESSL. The
+dnl user may also use --with-blas=<lib> in order to use some specific
+dnl BLAS library <lib>. In order to link successfully, however, be
+dnl aware that you will probably need to use the same Fortran compiler
+dnl (which can be set via the F77 env. var.) as was used to compile the
+dnl BLAS library.
+dnl
+dnl ACTION-IF-FOUND is a list of shell commands to run if a BLAS
+dnl library is found, and ACTION-IF-NOT-FOUND is a list of commands to
+dnl run it if it is not found. If ACTION-IF-FOUND is not specified, the
+dnl default action will define HAVE_BLAS.
+dnl
+dnl This macro requires autoconf 2.50 or later.
+dnl
+dnl @category InstalledPackages
+dnl @author Steven G. Johnson <stevenj@alum.mit.edu>
+dnl @version 2001-12-13
+dnl @license GPLWithACException
+
+AC_DEFUN([ACX_BLAS], [
+AC_PREREQ(2.50)
+AC_REQUIRE([AC_F77_LIBRARY_LDFLAGS])
+acx_blas_ok=no
+
+AC_ARG_WITH(blas,
+	[AC_HELP_STRING([--with-blas=<lib>], [use BLAS library <lib>])])
+case $with_blas in
+	yes | "") ;;
+	no) acx_blas_ok=disable ;;
+	-* | */* | *.a | *.so | *.so.* | *.o) BLAS_LIBS="$with_blas" ;;
+	*) BLAS_LIBS="-l$with_blas" ;;
+esac
+
+# Get fortran linker names of BLAS functions to check for.
+AC_F77_FUNC(sgemm)
+AC_F77_FUNC(dgemm)
+
+acx_blas_save_LIBS="$LIBS"
+LIBS="$LIBS $FLIBS"
+
+# First, check BLAS_LIBS environment variable
+if test $acx_blas_ok = no; then
+if test "x$BLAS_LIBS" != x; then
+	save_LIBS="$LIBS"; LIBS="$BLAS_LIBS $LIBS"
+	AC_MSG_CHECKING([for $sgemm in $BLAS_LIBS])
+	AC_TRY_LINK_FUNC($sgemm, [acx_blas_ok=yes], [BLAS_LIBS=""])
+	AC_MSG_RESULT($acx_blas_ok)
+	LIBS="$save_LIBS"
+fi
+fi
+
+# BLAS linked to by default?  (happens on some supercomputers)
+if test $acx_blas_ok = no; then
+	save_LIBS="$LIBS"; LIBS="$LIBS"
+	AC_CHECK_FUNC($sgemm, [acx_blas_ok=yes])
+	LIBS="$save_LIBS"
+fi
+
+# BLAS in ATLAS library? (http://math-atlas.sourceforge.net/)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(atlas, ATL_xerbla,
+		[AC_CHECK_LIB(f77blas, $sgemm,
+		[AC_CHECK_LIB(cblas, cblas_dgemm,
+			[acx_blas_ok=yes
+			 BLAS_LIBS="-lcblas -lf77blas -latlas"],
+			[], [-lf77blas -latlas])],
+			[], [-latlas])])
+fi
+
+# BLAS in PhiPACK libraries? (requires generic BLAS lib, too)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(blas, $sgemm,
+		[AC_CHECK_LIB(dgemm, $dgemm,
+		[AC_CHECK_LIB(sgemm, $sgemm,
+			[acx_blas_ok=yes; BLAS_LIBS="-lsgemm -ldgemm -lblas"],
+			[], [-lblas])],
+			[], [-lblas])])
+fi
+
+# BLAS in Alpha CXML library?
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(cxml, $sgemm, [acx_blas_ok=yes;BLAS_LIBS="-lcxml"])
+fi
+
+# BLAS in Alpha DXML library? (now called CXML, see above)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(dxml, $sgemm, [acx_blas_ok=yes;BLAS_LIBS="-ldxml"])
+fi
+
+# BLAS in Sun Performance library?
+if test $acx_blas_ok = no; then
+	if test "x$GCC" != xyes; then # only works with Sun CC
+		AC_CHECK_LIB(sunmath, acosp,
+			[AC_CHECK_LIB(sunperf, $sgemm,
+        			[BLAS_LIBS="-xlic_lib=sunperf -lsunmath"
+                                 acx_blas_ok=yes],[],[-lsunmath])])
+	fi
+fi
+
+# BLAS in SCSL library?  (SGI/Cray Scientific Library)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(scs, $sgemm, [acx_blas_ok=yes; BLAS_LIBS="-lscs"])
+fi
+
+# BLAS in SGIMATH library?
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(complib.sgimath, $sgemm,
+		     [acx_blas_ok=yes; BLAS_LIBS="-lcomplib.sgimath"])
+fi
+
+# BLAS in IBM ESSL library? (requires generic BLAS lib, too)
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(blas, $sgemm,
+		[AC_CHECK_LIB(essl, $sgemm,
+			[acx_blas_ok=yes; BLAS_LIBS="-lessl -lblas"],
+			[], [-lblas $FLIBS])])
+fi
+
+# Generic BLAS library?
+if test $acx_blas_ok = no; then
+	AC_CHECK_LIB(blas, $sgemm, [acx_blas_ok=yes; BLAS_LIBS="-lblas"])
+fi
+
+AC_SUBST(BLAS_LIBS)
+
+LIBS="$acx_blas_save_LIBS"
+
+# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
+if test x"$acx_blas_ok" = xyes; then
+        ifelse([$1],,AC_DEFINE(HAVE_BLAS,1,[Define if you have a BLAS library.]),[$1])
+        :
+else
+        acx_blas_ok=no
+        $2
+fi
+])dnl ACX_BLAS
diff -Naur ARPACK/acx_mpi.m4 ARPACK.new/acx_mpi.m4
--- ARPACK/acx_mpi.m4	1970-01-01 01:00:00.000000000 +0100
+++ ARPACK.new/acx_mpi.m4	2006-06-06 08:41:23.000000000 +0100
@@ -0,0 +1,107 @@
+dnl @synopsis ACX_MPI([ACTION-IF-FOUND[, ACTION-IF-NOT-FOUND]])
+dnl
+dnl @summary figure out how to compile/link code with MPI
+dnl
+dnl This macro tries to find out how to compile programs that use MPI
+dnl (Message Passing Interface), a standard API for parallel process
+dnl communication (see http://www-unix.mcs.anl.gov/mpi/)
+dnl
+dnl On success, it sets the MPICC, MPICXX, or MPIF77 output variable to
+dnl the name of the MPI compiler, depending upon the current language.
+dnl (This may just be $CC/$CXX/$F77, but is more often something like
+dnl mpicc/mpiCC/mpif77.) It also sets MPILIBS to any libraries that are
+dnl needed for linking MPI (e.g. -lmpi, if a special
+dnl MPICC/MPICXX/MPIF77 was not found).
+dnl
+dnl If you want to compile everything with MPI, you should set:
+dnl
+dnl     CC="$MPICC" #OR# CXX="$MPICXX" #OR# F77="$MPIF77"
+dnl     LIBS="$MPILIBS $LIBS"
+dnl
+dnl NOTE: The above assumes that you will use $CC (or whatever) for
+dnl linking as well as for compiling. (This is the default for automake
+dnl and most Makefiles.)
+dnl
+dnl The user can force a particular library/compiler by setting the
+dnl MPICC/MPICXX/MPIF77 and/or MPILIBS environment variables.
+dnl
+dnl ACTION-IF-FOUND is a list of shell commands to run if an MPI
+dnl library is found, and ACTION-IF-NOT-FOUND is a list of commands to
+dnl run it if it is not found. If ACTION-IF-FOUND is not specified, the
+dnl default action will define HAVE_MPI.
+dnl
+dnl @category InstalledPackages
+dnl @author Steven G. Johnson <stevenj@alum.mit.edu>
+dnl @version 2005-09-02
+dnl @license GPLWithACException
+
+AC_DEFUN([ACX_MPI], [
+AC_PREREQ(2.50) dnl for AC_LANG_CASE
+
+AC_LANG_CASE([C], [
+	AC_REQUIRE([AC_PROG_CC])
+	AC_ARG_VAR(MPICC,[MPI C compiler command])
+	AC_CHECK_PROGS(MPICC, mpicc hcc mpcc mpcc_r mpxlc cmpicc, $CC)
+	acx_mpi_save_CC="$CC"
+	CC="$MPICC"
+	AC_SUBST(MPICC)
+],
+[C++], [
+	AC_REQUIRE([AC_PROG_CXX])
+	AC_ARG_VAR(MPICXX,[MPI C++ compiler command])
+	AC_CHECK_PROGS(MPICXX, mpic++ mpiCC mpicxx mpCC hcp mpxlC mpxlC_r cmpic++, $CXX)
+	acx_mpi_save_CXX="$CXX"
+	CXX="$MPICXX"
+	AC_SUBST(MPICXX)
+],
+[Fortran 77], [
+	AC_REQUIRE([AC_PROG_F77])
+	AC_ARG_VAR(MPIF77,[MPI Fortran compiler command])
+	AC_CHECK_PROGS(MPIF77, mpif77 hf77 mpxlf mpf77 mpif90 mpf90 mpxlf90 mpxlf95 mpxlf_r cmpifc cmpif90c, $F77)
+	acx_mpi_save_F77="$F77"
+	F77="$MPIF77"
+	AC_SUBST(MPIF77)
+])
+
+if test x = x"$MPILIBS"; then
+	AC_LANG_CASE([C], [AC_CHECK_FUNC(MPI_Init, [MPILIBS=" "])],
+		[C++], [AC_CHECK_FUNC(MPI_Init, [MPILIBS=" "])],
+		[Fortran 77], [AC_MSG_CHECKING([for MPI_Init])
+			AC_TRY_LINK([],[      call MPI_Init], [MPILIBS=" "
+				AC_MSG_RESULT(yes)], [AC_MSG_RESULT(no)])])
+fi
+if test x = x"$MPILIBS"; then
+	AC_CHECK_LIB(mpi, MPI_Init, [MPILIBS="-lmpi"])
+fi
+if test x = x"$MPILIBS"; then
+	AC_CHECK_LIB(mpich, MPI_Init, [MPILIBS="-lmpich"])
+fi
+
+dnl We have to use AC_TRY_COMPILE and not AC_CHECK_HEADER because the
+dnl latter uses $CPP, not $CC (which may be mpicc).
+AC_LANG_CASE([C], [if test x != x"$MPILIBS"; then
+	AC_MSG_CHECKING([for mpi.h])
+	AC_TRY_COMPILE([#include <mpi.h>],[],[AC_MSG_RESULT(yes)], [MPILIBS=""
+		AC_MSG_RESULT(no)])
+fi],
+[C++], [if test x != x"$MPILIBS"; then
+	AC_MSG_CHECKING([for mpi.h])
+	AC_TRY_COMPILE([#include <mpi.h>],[],[AC_MSG_RESULT(yes)], [MPILIBS=""
+		AC_MSG_RESULT(no)])
+fi])
+
+AC_LANG_CASE([C], [CC="$acx_mpi_save_CC"],
+	[C++], [CXX="$acx_mpi_save_CXX"],
+	[Fortran 77], [F77="$acx_mpi_save_F77"])
+
+AC_SUBST(MPILIBS)
+
+# Finally, execute ACTION-IF-FOUND/ACTION-IF-NOT-FOUND:
+if test x = x"$MPILIBS"; then
+        $2
+        :
+else
+        ifelse([$1],,[AC_DEFINE(HAVE_MPI,1,[Define if you have the MPI library.])],[$1])
+        :
+fi
+])dnl ACX_MPI
diff -Naur ARPACK/configure.ac ARPACK.new/configure.ac
--- ARPACK/configure.ac	1970-01-01 01:00:00.000000000 +0100
+++ ARPACK.new/configure.ac	2006-06-06 11:27:48.165672152 +0100
@@ -0,0 +1,54 @@
+# -*- Autoconf -*-
+# Process this file with autoconf to produce a configure script.
+
+AC_PREREQ(2.59)
+AC_INIT(arpack, 96, http://www.caam.rice.edu/software/ARPACK/)
+AM_INIT_AUTOMAKE([foreign])
+
+# Checks for standard programs.
+AC_PROG_F77
+AC_PROG_LIBTOOL
+
+# blas stuff
+sinclude(acx_blas.m4)
+ACX_BLAS([], [BLASDIR=BLAS && BLASLIB="BLAS/libarpackblas.la"])
+
+AC_SUBST(BLASDIR)
+AC_SUBST(BLASLIB)
+
+# parpack stuff
+# Provide special option for the MPI version
+AC_MSG_CHECKING([for MPI mode])
+AC_ARG_ENABLE(mpi,
+	[AC_HELP_STRING([--enable-mpi],
+	[Enable MPI parallel processing (off by default)])],
+		use_mpi="yes"
+		AC_MSG_RESULT([yes]),
+      		use_mpi="no"
+		AC_MSG_RESULT([no]),
+	use_mpi="no"
+	AC_MSG_RESULT([no]))
+
+sinclude(acx_mpi.m4)
+if test "$use_mpi" = "yes"; then
+ACX_MPI([AC_DEFINE(HAVE_MPI,1,[use MPI library.])]
+   	[FC="$MPIF77" && CC="$MPICC" ],
+      	use_mpi="no")
+MPIDIR="PARPACK"
+fi
+
+AC_SUBST(MPIDIR)
+
+AC_CONFIG_FILES([
+	BLAS/Makefile
+	LAPACK/Makefile
+	UTIL/Makefile
+	SRC/Makefile
+	PARPACK/SRC/MPI/Makefile
+	PARPACK/SRC/Makefile
+	PARPACK/UTIL/MPI/Makefile
+	PARPACK/UTIL/Makefile
+	PARPACK/Makefile
+	Makefile
+        ])
+AC_OUTPUT
