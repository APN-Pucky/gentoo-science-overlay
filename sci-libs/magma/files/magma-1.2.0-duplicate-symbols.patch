diff -Nur src.orig/cgeqrf_mgpu-trace.cpp src/cgeqrf_mgpu-trace.cpp
--- src.orig/cgeqrf_mgpu-trace.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/cgeqrf_mgpu-trace.cpp	2012-06-25 17:10:21.000000000 +0100
@@ -16,108 +16,42 @@
 #include <sys/time.h>
 #include <assert.h>
 
-float get_current_cpu_time(void)
-{
-  struct timeval  time_val;
-
-  gettimeofday(&time_val, NULL);
-
-  return (float)(time_val.tv_sec) + (float)(time_val.tv_usec) / 1000000.0;
-}
+extern float get_current_cpu_time_float(void);
 
 #define MAX_THREADS 5
 
 //#define MAX_EVENTS 163840
 #define MAX_EVENTS 1048576
 
-int    event_num        [MAX_THREADS]               __attribute__ ((aligned (128)));
-float event_start_time [MAX_THREADS]               __attribute__ ((aligned (128)));
-float event_end_time   [MAX_THREADS]               __attribute__ ((aligned (128)));
-float event_log        [MAX_THREADS][MAX_EVENTS]   __attribute__ ((aligned (128)));
-int log_events = 1;
+extern int    event_num        [MAX_THREADS]               __attribute__ ((aligned (128)));
+extern float event_start_time_float [MAX_THREADS]               __attribute__ ((aligned (128)));
+extern float event_end_time_float   [MAX_THREADS]               __attribute__ ((aligned (128)));
+extern float event_log_float        [MAX_THREADS][MAX_EVENTS]   __attribute__ ((aligned (128)));
+extern int log_events;
 
 #define core_cpu_event_start(my_core_id)                      \
-  event_start_time[my_core_id] = get_current_cpu_time();      \
+  event_start_time_float[my_core_id] = get_current_cpu_time_float();      \
 
 #define core_cpu_event_end(my_core_id)                        \
-  event_end_time[my_core_id] = get_current_cpu_time();        \
+  event_end_time_float[my_core_id] = get_current_cpu_time_float();        \
 
 #define core_gpu_event_start(my_core_id, e1, e2)              \
   cudaEventElapsedTime(&ctime, e1, e2);                       \
-  event_start_time[my_core_id] = ctime/1000.+dtime;           \
+  event_start_time_float[my_core_id] = ctime/1000.+dtime;           \
 
 #define core_gpu_event_end(my_core_id, e1, e2)                \
   cudaEventElapsedTime(&ctime, e1, e2);                       \
-  event_end_time[my_core_id] = ctime/1000.+dtime;             \
+  event_end_time_float[my_core_id] = ctime/1000.+dtime;             \
 
 #define core_log_event(event, my_core_id)             \
-  event_log[my_core_id][event_num[my_core_id]+0] = my_core_id;\
-  event_log[my_core_id][event_num[my_core_id]+1] = event_start_time[my_core_id];\
-  event_log[my_core_id][event_num[my_core_id]+2] = event_end_time[my_core_id];\
-  event_log[my_core_id][event_num[my_core_id]+3] = (event);\
+  event_log_float[my_core_id][event_num[my_core_id]+0] = my_core_id;\
+  event_log_float[my_core_id][event_num[my_core_id]+1] = event_start_time_float[my_core_id];\
+  event_log_float[my_core_id][event_num[my_core_id]+2] = event_end_time_float[my_core_id];\
+  event_log_float[my_core_id][event_num[my_core_id]+3] = (event);\
   event_num[my_core_id] += (log_events << 2);         \
   event_num[my_core_id] &= (MAX_EVENTS-1);
 
-void dump_trace(int cores_num)
-{
-  char trace_file_name[32];
-  FILE *trace_file;
-  int event;
-  int core;
-
-  float scale = 100000.0;
-  float large = 100.0;
-
-  sprintf(trace_file_name, "trace.svg");
-  trace_file = fopen(trace_file_name, "w");
-  assert(trace_file != NULL);
-
-  fprintf(trace_file,
-          "<?xml version=\"1.0\" standalone=\"no\"?>"
-          "<svg version=\"1.1\" baseProfile=\"full\" xmlns=\"http://www.w3.org/2000/svg\" "
-          "xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:ev=\"http://www.w3.org/2001/xml-events\"  "
-          ">\n"
-          "  <g font-size=\"20\">\n");   
-  
-  for (core = 0; core < cores_num; core++)
-    for (event = 0; event < event_num[core]; event += 4)
-      {
-        int    thread = event_log[core][event+0];
-        float start  = event_log[core][event+1];
-        float end    = event_log[core][event+2];
-        int    color  = event_log[core][event+3];
-
-        start -= event_log[core][2];
-        end   -= event_log[core][2];
-        /*
-            fprintf(trace_file,
-                "    "
-                "<rect x=\"%.2lf\" y=\"%.0lf\" width=\"%.2lf\" height=\"%.0lf\" "
-                "fill=\"#%06x\" stroke=\"#000000\" stroke-width=\"1\"/>\n",
-                start * scale,
-                thread * 100.0,
-                (end - start) * scale,
-                90.0,
-                color);
-        */
-        fprintf(trace_file,
-            "    "
-            "<rect x=\"%.2lf\" y=\"%.0lf\" width=\"%.2lf\" height=\"%.0lf\" "
-                //            "fill=\"#%06x\" />\n",
-                "fill=\"#%06x\" stroke=\"#000000\" stroke-width=\"1\"/>\n",
-                start * scale,
-                thread * (large+20.0),
-                (end - start) * scale,
-                large,
-                color);
-      }
-
-  fprintf(trace_file,
-          "  </g>\n"
-          "</svg>\n");
-
-  fclose(trace_file);
-}
+extern void dump_trace_float(int cores_num);
 
 //===========================================================================
 
@@ -279,7 +213,7 @@
     core_cpu_event_end(num_gpus);
     core_log_event(0x666666, num_gpus);
     
-    dtime = get_current_cpu_time();
+    dtime = get_current_cpu_time_float();
 
     for(j=0; j<num_gpus; j++){
       magma_setdevice(j);
@@ -536,7 +470,7 @@
     }
 
     magma_setdevice(cdevice);
-    dump_trace(num_gpus+1);
+    dump_trace_float(num_gpus+1);
 
     return *info;
 } /* magma_cgeqrf2_mgpu */
diff -Nur src.orig/cheevr_gpu.cpp src/cheevr_gpu.cpp
--- src.orig/cheevr_gpu.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/cheevr_gpu.cpp	2012-06-25 06:59:15.000000000 +0100
@@ -13,34 +13,6 @@
 #include "common_magma.h"
 
 /* These interfaces are used for TAU profiling */
-extern "C" {
-    void Mylapackf77_cstemr(const char *jobz, const char *range, magma_int_t *n, float *d, float *e,
-                            float *vl, float *vu, magma_int_t *il, magma_int_t *iu, 
-                            magma_int_t *m, float *w, cuFloatComplex *z, magma_int_t *ldz,
-                            magma_int_t *nzc, magma_int_t *isuppz, magma_int_t *tryrac,
-                            float *work, magma_int_t *lwork, magma_int_t *iwork, 
-                            magma_int_t *liwork, magma_int_t *info)
-    {
-        lapackf77_cstemr(jobz, range, n, d, e, vl, vu, il, iu, m, w, z, ldz, nzc, 
-                         isuppz, tryrac, work, lwork, iwork, liwork, info);
-    }
-
-    void Mylapackf77_cstein(int *n, float *d, float *e, int *m, float *w, int *iblock,
-                            int *isplit, cuFloatComplex *z, int *ldz, float *work, 
-                            int *iwork, int *ifail, int *info)
-    {
-        lapackf77_cstein(n, d, e, m, w, iblock, isplit, z, ldz, work, iwork, ifail, info);
-    }
-  
-    void Mylapackf77_sstebz(const char *range, const char *order, int *n, float *vl, 
-                            float *vu, int *il, int *iu, float *abstol,
-                            float *d, float *e, int *m, int *nsplit, float *w, 
-                            int *iblock, int *isplit, float *work, int *iwork, int *info)
-    {
-        lapackf77_sstebz(range, order, n, vl, vu, il, iu, abstol, d, e, m,
-                         nsplit, w, iblock, isplit, work, iwork,info);
-    }
-}
 
 extern "C" {
 #ifdef ADD_
@@ -497,7 +469,7 @@
     else
       tryrac=0;
     
-    Mylapackf77_cstemr(jobz_, range_, &n, &rwork[indrdd], &rwork[indree], &vl, &vu, &il, 
+    lapackf77_cstemr(jobz_, range_, &n, &rwork[indrdd], &rwork[indree], &vl, &vu, &il, 
                      &iu, m, &w[1], wz, &ldwz, &n, &isuppz[1], &tryrac, &rwork[indrwk],
                      &llrwork, &iwork[1], &liwork, info);
     
@@ -514,10 +486,10 @@
     printf("B/I\n");
     *info = 0;
     
-    Mylapackf77_sstebz(range_, "B", &n, &vl, &vu, &il, &iu, &abstol, &rwork[indrd], &rwork[indre], m,
+    lapackf77_sstebz(range_, "B", &n, &vl, &vu, &il, &iu, &abstol, &rwork[indrd], &rwork[indre], m,
                      &nsplit, &w[1], &iwork[indibl], &iwork[indisp], &rwork[indrwk], &iwork[indiwo], info);
     
-    Mylapackf77_cstein(&n, &rwork[indrd], &rwork[indre], m, &w[1], &iwork[indibl], &iwork[indisp],
+    lapackf77_cstein(&n, &rwork[indrd], &rwork[indre], m, &w[1], &iwork[indibl], &iwork[indisp],
                        wz, &ldwz, &rwork[indrwk], &iwork[indiwo], &iwork[indifl], info);
       
       /*        Apply unitary matrix used in reduction to tridiagonal   
diff -Nur src.orig/cheevx_gpu.cpp src/cheevx_gpu.cpp
--- src.orig/cheevx_gpu.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/cheevx_gpu.cpp	2012-06-25 06:59:15.000000000 +0100
@@ -12,27 +12,6 @@
  */
 #include "common_magma.h"
 
-/* These interfaces are used for TAU profiling */
-extern"C"{
-    void Mylapackf77_cstein(magma_int_t *n, float *d, float *e, magma_int_t *m, 
-                            float *w, magma_int_t *iblock, magma_int_t *isplit,
-                            cuFloatComplex *z, magma_int_t *ldz, float *work, 
-                            magma_int_t *iwork, magma_int_t *ifail, magma_int_t *info)
-    {
-        lapackf77_cstein(n, d, e, m, w, iblock, isplit, z, ldz, work, iwork, ifail, info);
-    }
-
-    void Mylapackf77_sstebz(char *range, char *order, magma_int_t *n, float *vl,
-                            float *vu, magma_int_t *il, magma_int_t *iu, float *abstol,
-                            float *d, float *e, magma_int_t *m, magma_int_t *nsplit, 
-                            float *w, magma_int_t *iblock, magma_int_t *isplit, 
-                            float *work, magma_int_t *iwork, magma_int_t *info)
-    {
-        lapackf77_sstebz(range, order, n, vl, vu, il, iu, abstol, 
-                         d, e, m, nsplit, w, iblock, isplit, work, iwork,info);
-    }
-}
-
 extern "C" magma_int_t 
 magma_cheevx_gpu(char jobz, char range, char uplo, magma_int_t n, 
                  cuFloatComplex *da, magma_int_t ldda, float vl, float vu, 
@@ -404,12 +383,12 @@
     indisp = indibl + n;
     indiwk = indisp + n;
 
-    Mylapackf77_sstebz(range_, order, &n, &vl, &vu, &il, &iu, &abstol, &rwork[indd], &rwork[inde], m,
+    lapackf77_sstebz(range_, order, &n, &vl, &vu, &il, &iu, &abstol, &rwork[indd], &rwork[inde], m,
                      &nsplit, &w[1], &iwork[indibl], &iwork[indisp], &rwork[indrwk], &iwork[indiwk], info);
     
     if (wantz) {
       
-      Mylapackf77_cstein(&n, &rwork[indd], &rwork[inde], m, &w[1], &iwork[indibl], &iwork[indisp],
+      lapackf77_cstein(&n, &rwork[indd], &rwork[inde], m, &w[1], &iwork[indibl], &iwork[indisp],
                        wz, &ldwz, &rwork[indrwk], &iwork[indiwk], &ifail[1], info);
       
       magma_csetmatrix( n, *m, wz, ldwz, dz, lddz );
diff -Nur src.orig/chegvd.cpp src/chegvd.cpp
--- src.orig/chegvd.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/chegvd.cpp	2012-06-25 06:59:15.000000000 +0100
@@ -13,26 +13,6 @@
 */
 #include "common_magma.h"
 
-/* This ctrmm interface is used for TAU profiling */
-void Mymagma_ctrmm(char side, char uplo, char trans, char unit,
-                   magma_int_t n, magma_int_t m,
-                   cuFloatComplex alpha, cuFloatComplex *db, magma_int_t lddb,
-                   cuFloatComplex *dz, magma_int_t lddz)
-{
-  magma_ctrmm(side, uplo, trans, unit, n, m, alpha, db, lddb, dz, lddz);
-  magma_device_sync();
-}
-
-/* This ctrsm interface is used for TAU profiling */
-void Mymagma_ctrsm(char side, char uplo, char trans, char unit,
-                   magma_int_t n, magma_int_t m,
-                   cuFloatComplex alpha, cuFloatComplex *db, magma_int_t lddb,
-                   cuFloatComplex *dz, magma_int_t lddz)
-{
-  magma_ctrsm(side, uplo, trans, unit, n, m, alpha, db, lddb, dz, lddz);
-  magma_device_sync();
-}
-
 extern "C" magma_int_t
 magma_chegvd(magma_int_t itype, char jobz, char uplo, magma_int_t n,
              cuFloatComplex *a, magma_int_t lda, cuFloatComplex *b, magma_int_t ldb,
@@ -324,7 +304,7 @@
                 *(unsigned char *)trans = MagmaNoTrans;
             }
 
-            Mymagma_ctrsm(MagmaLeft, uplo_[0], *trans, MagmaNonUnit,
+            magma_ctrsm(MagmaLeft, uplo_[0], *trans, MagmaNonUnit,
                           n, n, c_one, db, lddb, da, ldda);
 
         } else if (itype == 3)
@@ -337,7 +317,7 @@
                 *(unsigned char *)trans = MagmaConjTrans;
             }
 
-            Mymagma_ctrmm(MagmaLeft, uplo_[0], *trans, MagmaNonUnit,
+            magma_ctrmm(MagmaLeft, uplo_[0], *trans, MagmaNonUnit,
                           n, n, c_one, db, lddb, da, ldda);
         }
 
diff -Nur src.orig/chegvdx.cpp src/chegvdx.cpp
--- src.orig/chegvdx.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/chegvdx.cpp	2012-06-25 06:59:15.000000000 +0100
@@ -12,22 +12,6 @@
 */
 #include "common_magma.h"
 
-void Mymagma_ctrmm(char side, char uplo, char trans, char unit, magma_int_t n, magma_int_t m,
-                   cuFloatComplex alpha, cuFloatComplex *db, magma_int_t lddb, 
-                   cuFloatComplex *dz, magma_int_t lddz)
-{
-    magma_ctrmm(side, uplo, trans, unit, n, m, alpha, db, lddb, dz, lddz);
-    magma_device_sync();
-}
-
-void Mymagma_ctrsm(char side, char uplo, char trans, char unit, magma_int_t n, magma_int_t m,
-                   cuFloatComplex alpha, cuFloatComplex *db, magma_int_t lddb, 
-                   cuFloatComplex *dz, magma_int_t lddz)
-{
-    magma_ctrsm(side, uplo, trans, unit, n, m, alpha, db, lddb, dz, lddz);
-    magma_device_sync();
-}
-
 extern "C" magma_int_t
 magma_chegvdx(magma_int_t itype, char jobz, char range, char uplo, magma_int_t n,
               cuFloatComplex *a, magma_int_t lda, cuFloatComplex *b, magma_int_t ldb, 
@@ -363,7 +347,7 @@
                 *(unsigned char *)trans = MagmaNoTrans;
             }
 
-            Mymagma_ctrsm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, db, lddb, da, ldda);
+            magma_ctrsm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, db, lddb, da, ldda);
 
         } else if (itype == 3) {
 
@@ -375,7 +359,7 @@
                 *(unsigned char *)trans = MagmaConjTrans;
             }
 
-            Mymagma_ctrmm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, db, lddb, da, ldda);
+            magma_ctrmm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, db, lddb, da, ldda);
 
         }
 
diff -Nur src.orig/chegvr.cpp src/chegvr.cpp
--- src.orig/chegvr.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/chegvr.cpp	2012-06-25 06:59:15.000000000 +0100
@@ -12,24 +12,6 @@
  */
 #include "common_magma.h"
 
-void Mymagma_ctrmm(char side, char uplo, char trans, char unit, 
-                   magma_int_t n, magma_int_t m,
-                   cuFloatComplex alpha, cuFloatComplex *db, magma_int_t lddb, 
-                   cuFloatComplex *dz, magma_int_t lddz)
-{
-    magma_ctrmm(side, uplo, trans, unit, n, m, alpha, db, lddb, dz, lddz);
-    magma_device_sync();
-}
-
-void Mymagma_ctrsm(char side, char uplo, char trans, char unit, 
-                   magma_int_t n, magma_int_t m,
-                   cuFloatComplex alpha, cuFloatComplex *db, magma_int_t lddb,
-                   cuFloatComplex *dz, magma_int_t lddz)
-{
-    magma_ctrsm(side, uplo, trans, unit, n, m, alpha, db, lddb, dz, lddz);
-    magma_device_sync();
-}
-
 extern "C" magma_int_t
 magma_chegvr(magma_int_t itype, char jobz, char range, char uplo, magma_int_t n,
              cuFloatComplex *a, magma_int_t lda, cuFloatComplex *b, magma_int_t ldb, 
@@ -408,7 +390,7 @@
                 *(unsigned char *)trans = MagmaNoTrans;
             }
             
-            Mymagma_ctrsm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, 
+            magma_ctrsm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, 
                           db, lddb, dz, lddz);
       
         } else if (itype == 3) {
@@ -421,7 +403,7 @@
                 *(unsigned char *)trans = MagmaConjTrans;
             }
             
-            Mymagma_ctrmm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, 
+            magma_ctrmm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, 
                           db, lddb, dz, lddz);
         }
         
diff -Nur src.orig/chegvx.cpp src/chegvx.cpp
--- src.orig/chegvx.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/chegvx.cpp	2012-06-25 06:59:15.000000000 +0100
@@ -12,22 +12,6 @@
  */
 #include "common_magma.h"
 
-void Mymagma_ctrmm(char side, char uplo, char trans, char unit, magma_int_t n, magma_int_t m,
-                   cuFloatComplex alpha, cuFloatComplex *db, magma_int_t lddb,
-                   cuFloatComplex *dz, magma_int_t lddz)
-{
-    magma_ctrmm(side, uplo, trans, unit, n, m, alpha, db, lddb, dz, lddz);
-    magma_device_sync();
-}
-
-void Mymagma_ctrsm(char side, char uplo, char trans, char unit, magma_int_t n, magma_int_t m,
-                   cuFloatComplex alpha, cuFloatComplex *db, magma_int_t lddb, 
-                   cuFloatComplex *dz, magma_int_t lddz)
-{
-    magma_ctrsm(side, uplo, trans, unit, n, m, alpha, db, lddb, dz, lddz);
-    magma_device_sync();
-}
-
 extern "C" magma_int_t
 magma_chegvx(magma_int_t itype, char jobz, char range, char uplo, magma_int_t n,
              cuFloatComplex *a, magma_int_t lda, cuFloatComplex *b, magma_int_t ldb, 
@@ -330,7 +314,7 @@
         *(unsigned char *)trans = MagmaNoTrans;
       }
       
-      Mymagma_ctrsm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, db, lddb, dz, lddz);
+      magma_ctrsm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, db, lddb, dz, lddz);
       
     } else if (itype == 3) {
       
@@ -343,7 +327,7 @@
         *(unsigned char *)trans = MagmaConjTrans;
       }
       
-      Mymagma_ctrmm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, db, lddb, dz, lddz);
+      magma_ctrmm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, db, lddb, dz, lddz);
       
     }
     
diff -Nur src.orig/cstedx_m.cpp src/cstedx_m.cpp
--- src.orig/cstedx_m.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/cstedx_m.cpp	2012-06-25 06:59:15.000000000 +0100
@@ -16,10 +16,7 @@
                                float* work, magma_int_t lwork, magma_int_t* iwork, magma_int_t liwork,
                                magma_int_t* info);
 
-    magma_int_t get_cstedx_smlsize()
-    {
-        return 25;
-    }
+   magma_int_t get_cstedx_smlsize();
 }
 
 extern "C" magma_int_t
diff -Nur src.orig/dgeqrf_mgpu-trace.cpp src/dgeqrf_mgpu-trace.cpp
--- src.orig/dgeqrf_mgpu-trace.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/dgeqrf_mgpu-trace.cpp	2012-06-25 06:59:15.000000000 +0100
@@ -1,4 +1,4 @@
-/*
+/*5A5A5A
     -- MAGMA (version 1.2.0) --
        Univ. of Tennessee, Knoxville
        Univ. of California, Berkeley
@@ -16,7 +16,7 @@
 #include <sys/time.h>
 #include <assert.h>
 
-double get_current_cpu_time(void)
+double get_current_cpu_time_double(void)
 {
   struct timeval  time_val;
 
@@ -30,35 +30,35 @@
 //#define MAX_EVENTS 163840
 #define MAX_EVENTS 1048576
 
-int    event_num        [MAX_THREADS]               __attribute__ ((aligned (128)));
-double event_start_time [MAX_THREADS]               __attribute__ ((aligned (128)));
-double event_end_time   [MAX_THREADS]               __attribute__ ((aligned (128)));
-double event_log        [MAX_THREADS][MAX_EVENTS]   __attribute__ ((aligned (128)));
-int log_events = 1;
+extern int    event_num        [MAX_THREADS]               __attribute__ ((aligned (128)));
+double event_start_time_double [MAX_THREADS]               __attribute__ ((aligned (128)));
+double event_end_time_double   [MAX_THREADS]               __attribute__ ((aligned (128)));
+double event_log_double        [MAX_THREADS][MAX_EVENTS]   __attribute__ ((aligned (128)));
+extern int log_events;
 
 #define core_cpu_event_start(my_core_id)                      \
-  event_start_time[my_core_id] = get_current_cpu_time();      \
+  event_start_time_double[my_core_id] = get_current_cpu_time_double();      \
 
 #define core_cpu_event_end(my_core_id)                        \
-  event_end_time[my_core_id] = get_current_cpu_time();        \
+  event_end_time_double[my_core_id] = get_current_cpu_time_double();        \
 
 #define core_gpu_event_start(my_core_id, e1, e2)              \
   cudaEventElapsedTime(&ctime, e1, e2);                       \
-  event_start_time[my_core_id] = ctime/1000.+dtime;           \
+  event_start_time_double[my_core_id] = ctime/1000.+dtime;           \
 
 #define core_gpu_event_end(my_core_id, e1, e2)                \
   cudaEventElapsedTime(&ctime, e1, e2);                       \
-  event_end_time[my_core_id] = ctime/1000.+dtime;             \
+  event_end_time_double[my_core_id] = ctime/1000.+dtime;             \
 
 #define core_log_event(event, my_core_id)             \
-  event_log[my_core_id][event_num[my_core_id]+0] = my_core_id;\
-  event_log[my_core_id][event_num[my_core_id]+1] = event_start_time[my_core_id];\
-  event_log[my_core_id][event_num[my_core_id]+2] = event_end_time[my_core_id];\
-  event_log[my_core_id][event_num[my_core_id]+3] = (event);\
+  event_log_double[my_core_id][event_num[my_core_id]+0] = my_core_id;\
+  event_log_double[my_core_id][event_num[my_core_id]+1] = event_start_time_double[my_core_id];\
+  event_log_double[my_core_id][event_num[my_core_id]+2] = event_end_time_double[my_core_id];\
+  event_log_double[my_core_id][event_num[my_core_id]+3] = (event);\
   event_num[my_core_id] += (log_events << 2);         \
   event_num[my_core_id] &= (MAX_EVENTS-1);
 
-void dump_trace(int cores_num)
+void dump_trace_double(int cores_num)
 {
   char trace_file_name[32];
   FILE *trace_file;
@@ -82,13 +82,13 @@
   for (core = 0; core < cores_num; core++)
     for (event = 0; event < event_num[core]; event += 4)
       {
-        int    thread = event_log[core][event+0];
-        double start  = event_log[core][event+1];
-        double end    = event_log[core][event+2];
-        int    color  = event_log[core][event+3];
+        int    thread = event_log_double[core][event+0];
+        double start  = event_log_double[core][event+1];
+        double end    = event_log_double[core][event+2];
+        int    color  = event_log_double[core][event+3];
 
-        start -= event_log[core][2];
-        end   -= event_log[core][2];
+        start -= event_log_double[core][2];
+        end   -= event_log_double[core][2];
         /*
             fprintf(trace_file,
                 "    "
@@ -279,7 +279,7 @@
     core_cpu_event_end(num_gpus);
     core_log_event(0x666666, num_gpus);
     
-    dtime = get_current_cpu_time();
+    dtime = get_current_cpu_time_double();
 
     for(j=0; j<num_gpus; j++){
       magma_setdevice(j);
@@ -536,7 +536,7 @@
     }
 
     magma_setdevice(cdevice);
-    dump_trace(num_gpus+1);
+    dump_trace_double(num_gpus+1);
 
     return *info;
 } /* magma_dgeqrf2_mgpu */
diff -Nur src.orig/dlaex0_m.cpp src/dlaex0_m.cpp
--- src.orig/dlaex0_m.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/dlaex0_m.cpp	2012-06-25 06:59:15.000000000 +0100
@@ -23,10 +23,7 @@
 
     int magma_get_dlaex3_m_nb();
 
-    magma_int_t get_dlaex0_smlsize()
-    {
-        return 25;
-    }
+    magma_int_t get_dlaex0_smlsize();
 }
 
 extern "C" magma_int_t
diff -Nur src.orig/dlaex3_m.cpp src/dlaex3_m.cpp
--- src.orig/dlaex3_m.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/dlaex3_m.cpp	2012-06-25 06:59:15.000000000 +0100
@@ -36,7 +36,7 @@
 }
 
 extern"C"{
-    void dvrange(magma_int_t k, double *d, magma_int_t *il, magma_int_t *iu, double vl, double vu)
+    void ddvrange(magma_int_t k, double *d, magma_int_t *il, magma_int_t *iu, double vl, double vu)
     {
         magma_int_t i;
 
@@ -53,7 +53,7 @@
         return;
     }
 
-    void dirange(magma_int_t k, magma_int_t* indxq, magma_int_t *iil, magma_int_t *iiu, magma_int_t il, magma_int_t iu)
+    void ddirange(magma_int_t k, magma_int_t* indxq, magma_int_t *iil, magma_int_t *iiu, magma_int_t il, magma_int_t iu)
     {
         magma_int_t i;
 
@@ -364,9 +364,9 @@
 
     //compute the lower and upper bound of the non-deflated eigenvectors
     if (valeig)
-        dvrange(k, d, &iil, &iiu, vl, vu);
+        ddvrange(k, d, &iil, &iiu, vl, vu);
     else if (indeig)
-        dirange(k, indxq, &iil, &iiu, il, iu);
+        ddirange(k, indxq, &iil, &iiu, il, iu);
     else {
         iil = 1;
         iiu = k;
diff -Nur src.orig/dstedx_m.cpp src/dstedx_m.cpp
--- src.orig/dstedx_m.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/dstedx_m.cpp	2012-06-25 06:59:15.000000000 +0100
@@ -26,10 +26,7 @@
 
     double lapackf77_dlanst( char* norm, magma_int_t* n, double* d, double* e);
 
-    magma_int_t get_dstedx_smlsize()
-    {
-        return 25;
-    }
+  magma_int_t get_dstedx_smlsize();
 }
 
 extern "C" magma_int_t
diff -Nur src.orig/sgeqrf_mgpu-trace.cpp src/sgeqrf_mgpu-trace.cpp
--- src.orig/sgeqrf_mgpu-trace.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/sgeqrf_mgpu-trace.cpp	2012-06-25 06:59:15.000000000 +0100
@@ -16,7 +16,7 @@
 #include <sys/time.h>
 #include <assert.h>
 
-float get_current_cpu_time(void)
+float get_current_cpu_time_float(void)
 {
   struct timeval  time_val;
 
@@ -31,34 +31,34 @@
 #define MAX_EVENTS 1048576
 
 int    event_num        [MAX_THREADS]               __attribute__ ((aligned (128)));
-float event_start_time [MAX_THREADS]               __attribute__ ((aligned (128)));
-float event_end_time   [MAX_THREADS]               __attribute__ ((aligned (128)));
-float event_log        [MAX_THREADS][MAX_EVENTS]   __attribute__ ((aligned (128)));
+float event_start_time_float [MAX_THREADS]               __attribute__ ((aligned (128)));
+float event_end_time_float   [MAX_THREADS]               __attribute__ ((aligned (128)));
+float event_log_float        [MAX_THREADS][MAX_EVENTS]   __attribute__ ((aligned (128)));
 int log_events = 1;
 
 #define core_cpu_event_start(my_core_id)                      \
-  event_start_time[my_core_id] = get_current_cpu_time();      \
+  event_start_time_float[my_core_id] = get_current_cpu_time_float();      \
 
 #define core_cpu_event_end(my_core_id)                        \
-  event_end_time[my_core_id] = get_current_cpu_time();        \
+  event_end_time_float[my_core_id] = get_current_cpu_time_float();        \
 
 #define core_gpu_event_start(my_core_id, e1, e2)              \
   cudaEventElapsedTime(&ctime, e1, e2);                       \
-  event_start_time[my_core_id] = ctime/1000.+dtime;           \
+  event_start_time_float[my_core_id] = ctime/1000.+dtime;           \
 
 #define core_gpu_event_end(my_core_id, e1, e2)                \
   cudaEventElapsedTime(&ctime, e1, e2);                       \
-  event_end_time[my_core_id] = ctime/1000.+dtime;             \
+  event_end_time_float[my_core_id] = ctime/1000.+dtime;             \
 
 #define core_log_event(event, my_core_id)             \
-  event_log[my_core_id][event_num[my_core_id]+0] = my_core_id;\
-  event_log[my_core_id][event_num[my_core_id]+1] = event_start_time[my_core_id];\
-  event_log[my_core_id][event_num[my_core_id]+2] = event_end_time[my_core_id];\
-  event_log[my_core_id][event_num[my_core_id]+3] = (event);\
+  event_log_float[my_core_id][event_num[my_core_id]+0] = my_core_id;\
+  event_log_float[my_core_id][event_num[my_core_id]+1] = event_start_time_float[my_core_id];\
+  event_log_float[my_core_id][event_num[my_core_id]+2] = event_end_time_float[my_core_id];\
+  event_log_float[my_core_id][event_num[my_core_id]+3] = (event);\
   event_num[my_core_id] += (log_events << 2);         \
   event_num[my_core_id] &= (MAX_EVENTS-1);
 
-void dump_trace(int cores_num)
+void dump_trace_float(int cores_num)
 {
   char trace_file_name[32];
   FILE *trace_file;
@@ -82,13 +82,13 @@
   for (core = 0; core < cores_num; core++)
     for (event = 0; event < event_num[core]; event += 4)
       {
-        int    thread = event_log[core][event+0];
-        float start  = event_log[core][event+1];
-        float end    = event_log[core][event+2];
-        int    color  = event_log[core][event+3];
+        int    thread = event_log_float[core][event+0];
+        float start  = event_log_float[core][event+1];
+        float end    = event_log_float[core][event+2];
+        int    color  = event_log_float[core][event+3];
 
-        start -= event_log[core][2];
-        end   -= event_log[core][2];
+        start -= event_log_float[core][2];
+        end   -= event_log_float[core][2];
         /*
             fprintf(trace_file,
                 "    "
@@ -279,7 +279,7 @@
     core_cpu_event_end(num_gpus);
     core_log_event(0x666666, num_gpus);
     
-    dtime = get_current_cpu_time();
+    dtime = get_current_cpu_time_float();
 
     for(j=0; j<num_gpus; j++){
       magma_setdevice(j);
@@ -536,7 +536,7 @@
     }
 
     magma_setdevice(cdevice);
-    dump_trace(num_gpus+1);
+    dump_trace_float(num_gpus+1);
 
     return *info;
 } /* magma_sgeqrf2_mgpu */
diff -Nur src.orig/slaex0_m.cpp src/slaex0_m.cpp
--- src.orig/slaex0_m.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/slaex0_m.cpp	2012-06-25 06:59:15.000000000 +0100
@@ -23,10 +23,7 @@
 
     int magma_get_slaex3_m_nb();
 
-    magma_int_t get_slaex0_smlsize()
-    {
-        return 25;
-    }
+    magma_int_t get_slaex0_smlsize();
 }
 
 extern "C" magma_int_t
diff -Nur src.orig/slaex3_m.cpp src/slaex3_m.cpp
--- src.orig/slaex3_m.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/slaex3_m.cpp	2012-06-25 06:59:15.000000000 +0100
@@ -36,7 +36,7 @@
 }
 
 extern"C"{
-    void dvrange(magma_int_t k, float *d, magma_int_t *il, magma_int_t *iu, float vl, float vu)
+    void sdvrange(magma_int_t k, float *d, magma_int_t *il, magma_int_t *iu, float vl, float vu)
     {
         magma_int_t i;
 
@@ -53,7 +53,7 @@
         return;
     }
 
-    void dirange(magma_int_t k, magma_int_t* indxq, magma_int_t *iil, magma_int_t *iiu, magma_int_t il, magma_int_t iu)
+    void sdirange(magma_int_t k, magma_int_t* indxq, magma_int_t *iil, magma_int_t *iiu, magma_int_t il, magma_int_t iu)
     {
         magma_int_t i;
 
@@ -364,9 +364,9 @@
 
     //compute the lower and upper bound of the non-deflated eigenvectors
     if (valeig)
-        dvrange(k, d, &iil, &iiu, vl, vu);
+        sdvrange(k, d, &iil, &iiu, vl, vu);
     else if (indeig)
-        dirange(k, indxq, &iil, &iiu, il, iu);
+        sdirange(k, indxq, &iil, &iiu, il, iu);
     else {
         iil = 1;
         iiu = k;
diff -Nur src.orig/sstedx_m.cpp src/sstedx_m.cpp
--- src.orig/sstedx_m.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/sstedx_m.cpp	2012-06-25 06:59:15.000000000 +0100
@@ -26,10 +26,7 @@
 
     float lapackf77_slanst( char* norm, magma_int_t* n, float* d, float* e);
 
-    magma_int_t get_sstedx_smlsize()
-    {
-        return 25;
-    }
+    magma_int_t get_sstedx_smlsize();
 }
 
 extern "C" magma_int_t
diff -Nur src.orig/zgeqrf_mgpu-trace.cpp src/zgeqrf_mgpu-trace.cpp
--- src.orig/zgeqrf_mgpu-trace.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/zgeqrf_mgpu-trace.cpp	2012-06-25 17:20:18.000000000 +0100
@@ -16,108 +16,42 @@
 #include <sys/time.h>
 #include <assert.h>
 
-double get_current_cpu_time(void)
-{
-  struct timeval  time_val;
-
-  gettimeofday(&time_val, NULL);
-
-  return (double)(time_val.tv_sec) + (double)(time_val.tv_usec) / 1000000.0;
-}
+extern double get_current_cpu_time_double(void);
 
 #define MAX_THREADS 5
 
 //#define MAX_EVENTS 163840
 #define MAX_EVENTS 1048576
 
-int    event_num        [MAX_THREADS]               __attribute__ ((aligned (128)));
-double event_start_time [MAX_THREADS]               __attribute__ ((aligned (128)));
-double event_end_time   [MAX_THREADS]               __attribute__ ((aligned (128)));
-double event_log        [MAX_THREADS][MAX_EVENTS]   __attribute__ ((aligned (128)));
-int log_events = 1;
+extern int    event_num        [MAX_THREADS]               __attribute__ ((aligned (128)));
+extern double event_start_time_double [MAX_THREADS]               __attribute__ ((aligned (128)));
+extern double event_end_time_double   [MAX_THREADS]               __attribute__ ((aligned (128)));
+extern double event_log_double        [MAX_THREADS][MAX_EVENTS]   __attribute__ ((aligned (128)));
+extern int log_events;
 
 #define core_cpu_event_start(my_core_id)                      \
-  event_start_time[my_core_id] = get_current_cpu_time();      \
+  event_start_time_double[my_core_id] = get_current_cpu_time_double();      \
 
 #define core_cpu_event_end(my_core_id)                        \
-  event_end_time[my_core_id] = get_current_cpu_time();        \
+  event_end_time_double[my_core_id] = get_current_cpu_time_double();        \
 
 #define core_gpu_event_start(my_core_id, e1, e2)              \
   cudaEventElapsedTime(&ctime, e1, e2);                       \
-  event_start_time[my_core_id] = ctime/1000.+dtime;           \
+  event_start_time_double[my_core_id] = ctime/1000.+dtime;           \
 
 #define core_gpu_event_end(my_core_id, e1, e2)                \
   cudaEventElapsedTime(&ctime, e1, e2);                       \
-  event_end_time[my_core_id] = ctime/1000.+dtime;             \
+  event_end_time_double[my_core_id] = ctime/1000.+dtime;             \
 
 #define core_log_event(event, my_core_id)             \
-  event_log[my_core_id][event_num[my_core_id]+0] = my_core_id;\
-  event_log[my_core_id][event_num[my_core_id]+1] = event_start_time[my_core_id];\
-  event_log[my_core_id][event_num[my_core_id]+2] = event_end_time[my_core_id];\
-  event_log[my_core_id][event_num[my_core_id]+3] = (event);\
+  event_log_double[my_core_id][event_num[my_core_id]+0] = my_core_id;\
+  event_log_double[my_core_id][event_num[my_core_id]+1] = event_start_time_double[my_core_id];\
+  event_log_double[my_core_id][event_num[my_core_id]+2] = event_end_time_double[my_core_id];\
+  event_log_double[my_core_id][event_num[my_core_id]+3] = (event);\
   event_num[my_core_id] += (log_events << 2);         \
   event_num[my_core_id] &= (MAX_EVENTS-1);
 
-void dump_trace(int cores_num)
-{
-  char trace_file_name[32];
-  FILE *trace_file;
-  int event;
-  int core;
-
-  double scale = 100000.0;
-  double large = 100.0;
-
-  sprintf(trace_file_name, "trace.svg");
-  trace_file = fopen(trace_file_name, "w");
-  assert(trace_file != NULL);
-
-  fprintf(trace_file,
-          "<?xml version=\"1.0\" standalone=\"no\"?>"
-          "<svg version=\"1.1\" baseProfile=\"full\" xmlns=\"http://www.w3.org/2000/svg\" "
-          "xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:ev=\"http://www.w3.org/2001/xml-events\"  "
-          ">\n"
-          "  <g font-size=\"20\">\n");   
-  
-  for (core = 0; core < cores_num; core++)
-    for (event = 0; event < event_num[core]; event += 4)
-      {
-        int    thread = event_log[core][event+0];
-        double start  = event_log[core][event+1];
-        double end    = event_log[core][event+2];
-        int    color  = event_log[core][event+3];
-
-        start -= event_log[core][2];
-        end   -= event_log[core][2];
-        /*
-            fprintf(trace_file,
-                "    "
-                "<rect x=\"%.2lf\" y=\"%.0lf\" width=\"%.2lf\" height=\"%.0lf\" "
-                "fill=\"#%06x\" stroke=\"#000000\" stroke-width=\"1\"/>\n",
-                start * scale,
-                thread * 100.0,
-                (end - start) * scale,
-                90.0,
-                color);
-        */
-        fprintf(trace_file,
-            "    "
-            "<rect x=\"%.2lf\" y=\"%.0lf\" width=\"%.2lf\" height=\"%.0lf\" "
-                //            "fill=\"#%06x\" />\n",
-                "fill=\"#%06x\" stroke=\"#000000\" stroke-width=\"1\"/>\n",
-                start * scale,
-                thread * (large+20.0),
-                (end - start) * scale,
-                large,
-                color);
-      }
-
-  fprintf(trace_file,
-          "  </g>\n"
-          "</svg>\n");
-
-  fclose(trace_file);
-}
+extern void dump_trace_double(int cores_num);
 
 //===========================================================================
 
@@ -279,7 +213,7 @@
     core_cpu_event_end(num_gpus);
     core_log_event(0x666666, num_gpus);
     
-    dtime = get_current_cpu_time();
+    dtime = get_current_cpu_time_double();
 
     for(j=0; j<num_gpus; j++){
       magma_setdevice(j);
@@ -536,7 +470,7 @@
     }
 
     magma_setdevice(cdevice);
-    dump_trace(num_gpus+1);
+    dump_trace_double(num_gpus+1);
 
     return *info;
 } /* magma_zgeqrf2_mgpu */
diff -Nur src.orig/zheevr_gpu.cpp src/zheevr_gpu.cpp
--- src.orig/zheevr_gpu.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/zheevr_gpu.cpp	2012-06-25 06:59:15.000000000 +0100
@@ -12,36 +12,6 @@
 */
 #include "common_magma.h"
 
-/* These interfaces are used for TAU profiling */
-extern "C" {
-    void Mylapackf77_zstemr(const char *jobz, const char *range, magma_int_t *n, double *d, double *e,
-                            double *vl, double *vu, magma_int_t *il, magma_int_t *iu, 
-                            magma_int_t *m, double *w, cuDoubleComplex *z, magma_int_t *ldz,
-                            magma_int_t *nzc, magma_int_t *isuppz, magma_int_t *tryrac,
-                            double *work, magma_int_t *lwork, magma_int_t *iwork, 
-                            magma_int_t *liwork, magma_int_t *info)
-    {
-        lapackf77_zstemr(jobz, range, n, d, e, vl, vu, il, iu, m, w, z, ldz, nzc, 
-                         isuppz, tryrac, work, lwork, iwork, liwork, info);
-    }
-
-    void Mylapackf77_zstein(int *n, double *d, double *e, int *m, double *w, int *iblock,
-                            int *isplit, cuDoubleComplex *z, int *ldz, double *work, 
-                            int *iwork, int *ifail, int *info)
-    {
-        lapackf77_zstein(n, d, e, m, w, iblock, isplit, z, ldz, work, iwork, ifail, info);
-    }
-  
-    void Mylapackf77_dstebz(const char *range, const char *order, int *n, double *vl, 
-                            double *vu, int *il, int *iu, double *abstol,
-                            double *d, double *e, int *m, int *nsplit, double *w, 
-                            int *iblock, int *isplit, double *work, int *iwork, int *info)
-    {
-        lapackf77_dstebz(range, order, n, vl, vu, il, iu, abstol, d, e, m,
-                         nsplit, w, iblock, isplit, work, iwork,info);
-    }
-}
-
 extern "C" {
 #ifdef ADD_
 #    define lapackf77_ieeeck   ieeeck_
@@ -497,7 +467,7 @@
     else
       tryrac=0;
     
-    Mylapackf77_zstemr(jobz_, range_, &n, &rwork[indrdd], &rwork[indree], &vl, &vu, &il, 
+    lapackf77_zstemr(jobz_, range_, &n, &rwork[indrdd], &rwork[indree], &vl, &vu, &il, 
                      &iu, m, &w[1], wz, &ldwz, &n, &isuppz[1], &tryrac, &rwork[indrwk],
                      &llrwork, &iwork[1], &liwork, info);
     
@@ -514,10 +484,10 @@
     printf("B/I\n");
     *info = 0;
     
-    Mylapackf77_dstebz(range_, "B", &n, &vl, &vu, &il, &iu, &abstol, &rwork[indrd], &rwork[indre], m,
+    lapackf77_dstebz(range_, "B", &n, &vl, &vu, &il, &iu, &abstol, &rwork[indrd], &rwork[indre], m,
                      &nsplit, &w[1], &iwork[indibl], &iwork[indisp], &rwork[indrwk], &iwork[indiwo], info);
     
-    Mylapackf77_zstein(&n, &rwork[indrd], &rwork[indre], m, &w[1], &iwork[indibl], &iwork[indisp],
+    lapackf77_zstein(&n, &rwork[indrd], &rwork[indre], m, &w[1], &iwork[indibl], &iwork[indisp],
                        wz, &ldwz, &rwork[indrwk], &iwork[indiwo], &iwork[indifl], info);
       
       /*        Apply unitary matrix used in reduction to tridiagonal   
diff -Nur src.orig/zheevx_gpu.cpp src/zheevx_gpu.cpp
--- src.orig/zheevx_gpu.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/zheevx_gpu.cpp	2012-06-25 06:59:15.000000000 +0100
@@ -12,27 +12,6 @@
  */
 #include "common_magma.h"
 
-/* These interfaces are used for TAU profiling */
-extern"C"{
-    void Mylapackf77_zstein(magma_int_t *n, double *d, double *e, magma_int_t *m, 
-                            double *w, magma_int_t *iblock, magma_int_t *isplit,
-                            cuDoubleComplex *z, magma_int_t *ldz, double *work, 
-                            magma_int_t *iwork, magma_int_t *ifail, magma_int_t *info)
-    {
-        lapackf77_zstein(n, d, e, m, w, iblock, isplit, z, ldz, work, iwork, ifail, info);
-    }
-
-    void Mylapackf77_dstebz(char *range, char *order, magma_int_t *n, double *vl,
-                            double *vu, magma_int_t *il, magma_int_t *iu, double *abstol,
-                            double *d, double *e, magma_int_t *m, magma_int_t *nsplit, 
-                            double *w, magma_int_t *iblock, magma_int_t *isplit, 
-                            double *work, magma_int_t *iwork, magma_int_t *info)
-    {
-        lapackf77_dstebz(range, order, n, vl, vu, il, iu, abstol, 
-                         d, e, m, nsplit, w, iblock, isplit, work, iwork,info);
-    }
-}
-
 extern "C" magma_int_t 
 magma_zheevx_gpu(char jobz, char range, char uplo, magma_int_t n, 
                  cuDoubleComplex *da, magma_int_t ldda, double vl, double vu, 
@@ -404,12 +383,12 @@
     indisp = indibl + n;
     indiwk = indisp + n;
 
-    Mylapackf77_dstebz(range_, order, &n, &vl, &vu, &il, &iu, &abstol, &rwork[indd], &rwork[inde], m,
+    lapackf77_dstebz(range_, order, &n, &vl, &vu, &il, &iu, &abstol, &rwork[indd], &rwork[inde], m,
                      &nsplit, &w[1], &iwork[indibl], &iwork[indisp], &rwork[indrwk], &iwork[indiwk], info);
     
     if (wantz) {
       
-      Mylapackf77_zstein(&n, &rwork[indd], &rwork[inde], m, &w[1], &iwork[indibl], &iwork[indisp],
+      lapackf77_zstein(&n, &rwork[indd], &rwork[inde], m, &w[1], &iwork[indibl], &iwork[indisp],
                        wz, &ldwz, &rwork[indrwk], &iwork[indiwk], &ifail[1], info);
       
       magma_zsetmatrix( n, *m, wz, ldwz, dz, lddz );
diff -Nur src.orig/zhegvd.cpp src/zhegvd.cpp
--- src.orig/zhegvd.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/zhegvd.cpp	2012-06-25 06:59:15.000000000 +0100
@@ -13,26 +13,6 @@
 */
 #include "common_magma.h"
 
-/* This ztrmm interface is used for TAU profiling */
-void Mymagma_ztrmm(char side, char uplo, char trans, char unit,
-                   magma_int_t n, magma_int_t m,
-                   cuDoubleComplex alpha, cuDoubleComplex *db, magma_int_t lddb,
-                   cuDoubleComplex *dz, magma_int_t lddz)
-{
-  magma_ztrmm(side, uplo, trans, unit, n, m, alpha, db, lddb, dz, lddz);
-  magma_device_sync();
-}
-
-/* This ztrsm interface is used for TAU profiling */
-void Mymagma_ztrsm(char side, char uplo, char trans, char unit,
-                   magma_int_t n, magma_int_t m,
-                   cuDoubleComplex alpha, cuDoubleComplex *db, magma_int_t lddb,
-                   cuDoubleComplex *dz, magma_int_t lddz)
-{
-  magma_ztrsm(side, uplo, trans, unit, n, m, alpha, db, lddb, dz, lddz);
-  magma_device_sync();
-}
-
 extern "C" magma_int_t
 magma_zhegvd(magma_int_t itype, char jobz, char uplo, magma_int_t n,
              cuDoubleComplex *a, magma_int_t lda, cuDoubleComplex *b, magma_int_t ldb,
@@ -324,7 +304,7 @@
                 *(unsigned char *)trans = MagmaNoTrans;
             }
 
-            Mymagma_ztrsm(MagmaLeft, uplo_[0], *trans, MagmaNonUnit,
+            magma_ztrsm(MagmaLeft, uplo_[0], *trans, MagmaNonUnit,
                           n, n, c_one, db, lddb, da, ldda);
 
         } else if (itype == 3)
@@ -337,7 +317,7 @@
                 *(unsigned char *)trans = MagmaConjTrans;
             }
 
-            Mymagma_ztrmm(MagmaLeft, uplo_[0], *trans, MagmaNonUnit,
+            magma_ztrmm(MagmaLeft, uplo_[0], *trans, MagmaNonUnit,
                           n, n, c_one, db, lddb, da, ldda);
         }
 
diff -Nur src.orig/zhegvdx.cpp src/zhegvdx.cpp
--- src.orig/zhegvdx.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/zhegvdx.cpp	2012-06-25 06:59:15.000000000 +0100
@@ -12,22 +12,6 @@
 */
 #include "common_magma.h"
 
-void Mymagma_ztrmm(char side, char uplo, char trans, char unit, magma_int_t n, magma_int_t m,
-                   cuDoubleComplex alpha, cuDoubleComplex *db, magma_int_t lddb, 
-                   cuDoubleComplex *dz, magma_int_t lddz)
-{
-    magma_ztrmm(side, uplo, trans, unit, n, m, alpha, db, lddb, dz, lddz);
-    magma_device_sync();
-}
-
-void Mymagma_ztrsm(char side, char uplo, char trans, char unit, magma_int_t n, magma_int_t m,
-                   cuDoubleComplex alpha, cuDoubleComplex *db, magma_int_t lddb, 
-                   cuDoubleComplex *dz, magma_int_t lddz)
-{
-    magma_ztrsm(side, uplo, trans, unit, n, m, alpha, db, lddb, dz, lddz);
-    magma_device_sync();
-}
-
 extern "C" magma_int_t
 magma_zhegvdx(magma_int_t itype, char jobz, char range, char uplo, magma_int_t n,
               cuDoubleComplex *a, magma_int_t lda, cuDoubleComplex *b, magma_int_t ldb, 
@@ -363,7 +347,7 @@
                 *(unsigned char *)trans = MagmaNoTrans;
             }
 
-            Mymagma_ztrsm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, db, lddb, da, ldda);
+            magma_ztrsm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, db, lddb, da, ldda);
 
         } else if (itype == 3) {
 
@@ -375,7 +359,7 @@
                 *(unsigned char *)trans = MagmaConjTrans;
             }
 
-            Mymagma_ztrmm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, db, lddb, da, ldda);
+            magma_ztrmm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, db, lddb, da, ldda);
 
         }
 
diff -Nur src.orig/zhegvr.cpp src/zhegvr.cpp
--- src.orig/zhegvr.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/zhegvr.cpp	2012-06-25 06:59:15.000000000 +0100
@@ -12,24 +12,6 @@
  */
 #include "common_magma.h"
 
-void Mymagma_ztrmm(char side, char uplo, char trans, char unit, 
-                   magma_int_t n, magma_int_t m,
-                   cuDoubleComplex alpha, cuDoubleComplex *db, magma_int_t lddb, 
-                   cuDoubleComplex *dz, magma_int_t lddz)
-{
-    magma_ztrmm(side, uplo, trans, unit, n, m, alpha, db, lddb, dz, lddz);
-    magma_device_sync();
-}
-
-void Mymagma_ztrsm(char side, char uplo, char trans, char unit, 
-                   magma_int_t n, magma_int_t m,
-                   cuDoubleComplex alpha, cuDoubleComplex *db, magma_int_t lddb,
-                   cuDoubleComplex *dz, magma_int_t lddz)
-{
-    magma_ztrsm(side, uplo, trans, unit, n, m, alpha, db, lddb, dz, lddz);
-    magma_device_sync();
-}
-
 extern "C" magma_int_t
 magma_zhegvr(magma_int_t itype, char jobz, char range, char uplo, magma_int_t n,
              cuDoubleComplex *a, magma_int_t lda, cuDoubleComplex *b, magma_int_t ldb, 
@@ -408,7 +390,7 @@
                 *(unsigned char *)trans = MagmaNoTrans;
             }
             
-            Mymagma_ztrsm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, 
+            magma_ztrsm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, 
                           db, lddb, dz, lddz);
       
         } else if (itype == 3) {
@@ -421,7 +403,7 @@
                 *(unsigned char *)trans = MagmaConjTrans;
             }
             
-            Mymagma_ztrmm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, 
+            magma_ztrmm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, 
                           db, lddb, dz, lddz);
         }
         
diff -Nur src.orig/zhegvx.cpp src/zhegvx.cpp
--- src.orig/zhegvx.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/zhegvx.cpp	2012-06-25 06:59:15.000000000 +0100
@@ -12,22 +12,6 @@
  */
 #include "common_magma.h"
 
-void Mymagma_ztrmm(char side, char uplo, char trans, char unit, magma_int_t n, magma_int_t m,
-                   cuDoubleComplex alpha, cuDoubleComplex *db, magma_int_t lddb,
-                   cuDoubleComplex *dz, magma_int_t lddz)
-{
-    magma_ztrmm(side, uplo, trans, unit, n, m, alpha, db, lddb, dz, lddz);
-    magma_device_sync();
-}
-
-void Mymagma_ztrsm(char side, char uplo, char trans, char unit, magma_int_t n, magma_int_t m,
-                   cuDoubleComplex alpha, cuDoubleComplex *db, magma_int_t lddb, 
-                   cuDoubleComplex *dz, magma_int_t lddz)
-{
-    magma_ztrsm(side, uplo, trans, unit, n, m, alpha, db, lddb, dz, lddz);
-    magma_device_sync();
-}
-
 extern "C" magma_int_t
 magma_zhegvx(magma_int_t itype, char jobz, char range, char uplo, magma_int_t n,
              cuDoubleComplex *a, magma_int_t lda, cuDoubleComplex *b, magma_int_t ldb, 
@@ -330,7 +314,7 @@
         *(unsigned char *)trans = MagmaNoTrans;
       }
       
-      Mymagma_ztrsm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, db, lddb, dz, lddz);
+      magma_ztrsm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, db, lddb, dz, lddz);
       
     } else if (itype == 3) {
       
@@ -343,7 +327,7 @@
         *(unsigned char *)trans = MagmaConjTrans;
       }
       
-      Mymagma_ztrmm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, db, lddb, dz, lddz);
+      magma_ztrmm(MagmaLeft, uplo, *trans, MagmaNonUnit, n, *m, c_one, db, lddb, dz, lddz);
       
     }
     
diff -Nur src.orig/zstedx_m.cpp src/zstedx_m.cpp
--- src.orig/zstedx_m.cpp	2012-06-23 21:52:09.000000000 +0100
+++ src/zstedx_m.cpp	2012-06-25 06:59:15.000000000 +0100
@@ -16,10 +16,7 @@
                                double* work, magma_int_t lwork, magma_int_t* iwork, magma_int_t liwork,
                                magma_int_t* info);
 
-    magma_int_t get_zstedx_smlsize()
-    {
-        return 25;
-    }
+    magma_int_t get_zstedx_smlsize();
 }
 
 extern "C" magma_int_t
