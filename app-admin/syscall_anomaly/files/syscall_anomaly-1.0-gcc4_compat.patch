diff -Naurp syscall_anomaly-1.0-orig/src/analyzer.hpp syscall_anomaly-1.0-ptch/src/analyzer.hpp
--- syscall_anomaly-1.0-orig/src/analyzer.hpp	2004-03-12 20:55:16.000000000 +0000
+++ syscall_anomaly-1.0-ptch/src/analyzer.hpp	2009-12-12 22:29:12.000000000 +0000
@@ -3,10 +3,17 @@
 
 #include <string>
 
-#if defined(__GNUC__) && __GNUC__ == 3
+#ifdef __GNUC__
+#if __GNUC__ < 3
+#include <hash_map>
+#elif __GNUC__ < 4
 #include <ext/hash_map>
 using namespace __gnu_cxx;
 #else
+#include <ext/hash_map>
+using namespace __gnu_cxx;
+#endif
+#else
 #include <hash_map>
 #endif
 
@@ -16,7 +23,7 @@ using namespace __gnu_cxx;
 #include "syscall2.h"
 
 
-#if defined(__GNUC__) && __GNUC__ == 3
+#if defined(__GNUC__) && __GNUC__ > 2
 namespace __gnu_cxx {
 #else
 namespace std {
diff -Naurp syscall_anomaly-1.0-orig/src/config.hpp syscall_anomaly-1.0-ptch/src/config.hpp
--- syscall_anomaly-1.0-orig/src/config.hpp	2004-10-17 22:44:59.000000000 +0000
+++ syscall_anomaly-1.0-ptch/src/config.hpp	2009-12-12 22:29:12.000000000 +0000
@@ -5,10 +5,17 @@
 #include <string>
 #include <fstream>
 
-#if defined(__GNUC__) && __GNUC__ == 3
+#ifdef __GNUC__
+#if __GNUC__ < 3
+#include <hash_map>
+#elif __GNUC__ < 4
 #include <ext/hash_map>
 using namespace __gnu_cxx;
 #else
+#include <ext/hash_map>
+using namespace __gnu_cxx;
+#endif
+#else
 #include <hash_map>
 #endif
 
diff -Naurp syscall_anomaly-1.0-orig/src/Event.cpp syscall_anomaly-1.0-ptch/src/Event.cpp
--- syscall_anomaly-1.0-orig/src/Event.cpp	2004-03-12 20:55:16.000000000 +0000
+++ syscall_anomaly-1.0-ptch/src/Event.cpp	2009-12-12 22:29:12.000000000 +0000
@@ -4,7 +4,6 @@
 
 #include <sstream>
 #include <stdio.h>
-
 #include "syscall.h"
 #include "Event.hpp"
 #include <time.h>
@@ -44,6 +43,39 @@ const string
 Event::getSyscall(void) const
 {
   switch(syscallno) {
+
+#if __WORDSIZE != 64
+    case SYS_truncate64:
+      return "truncate64";
+
+    case SYS_chown32:
+      return "chown32";
+
+    case SYS_lchown32:
+      return "lchown32";
+
+    case SYS_setuid32:
+      return "setuid32";
+
+    case SYS_umount:
+      return "umount";
+
+    case SYS_setgid32:
+      return "setgid32";
+
+    case SYS_setreuid32:
+      return "setreuid32";
+
+    case SYS_setregid32:
+      return "setregid32"
+
+    case SYS_setresuid32:
+      return "setresuid32";
+
+    case SYS_setresgid32:
+      return "setresgid32";
+#endif
+
     case SYS_exit:
       return "exit";
   
@@ -74,9 +106,6 @@ Event::getSyscall(void) const
     case SYS_truncate:
       return "truncate";
       
-    case SYS_truncate64:
-      return "truncate64";
-      
     case SYS_chroot:
       return "chroot";
       
@@ -86,12 +115,6 @@ Event::getSyscall(void) const
     case SYS_lchown:
       return "lchown";
       
-    case SYS_chown32:
-      return "chown32";
-      
-    case SYS_lchown32:
-      return "lchown32";
-      
     case SYS_execve:
       return "execve";
       
@@ -107,45 +130,24 @@ Event::getSyscall(void) const
     case SYS_mount:
       return "mount";
       
-    case SYS_umount:
-      return "umount";
-      
     case SYS_setuid:
       return "setuid";
       
-    case SYS_setuid32:
-      return "setuid32";
-      
     case SYS_setgid:
       return "setgid";
       
-    case SYS_setgid32:
-      return "setgid32";
-      
     case SYS_setreuid:
       return "setreuid";
       
-    case SYS_setreuid32:
-      return "setreuid32";
-      
     case SYS_setregid:
       return "setregid";
       
-    case SYS_setregid32:
-      return "setregid32";
-      
     case SYS_setresuid:
       return "setresuid";
       
-    case SYS_setresuid32:
-      return "setresuid32";
-      
     case SYS_setresgid:
       return "setresgid";
       
-    case SYS_setresgid32:
-      return "setresgid32";
-      
     case SYS_create_module:
       return "create_module";
       
diff -Naurp syscall_anomaly-1.0-orig/src/forrest.cpp syscall_anomaly-1.0-ptch/src/forrest.cpp
--- syscall_anomaly-1.0-orig/src/forrest.cpp	2004-10-21 02:55:02.000000000 +0000
+++ syscall_anomaly-1.0-ptch/src/forrest.cpp	2009-12-12 22:29:31.000000000 +0000
@@ -1,4 +1,5 @@
 #include <unistd.h>
+#include <string.h>
 
 #include "Event.hpp"
 #include "EventProvider.hpp"
diff -Naurp syscall_anomaly-1.0-orig/src/ModelWrappers.cpp syscall_anomaly-1.0-ptch/src/ModelWrappers.cpp
--- syscall_anomaly-1.0-orig/src/ModelWrappers.cpp	2003-05-29 23:37:44.000000000 +0000
+++ syscall_anomaly-1.0-ptch/src/ModelWrappers.cpp	2009-12-12 22:29:12.000000000 +0000
@@ -1,5 +1,6 @@
 #include "ModelWrappers.hpp"
 #include <sstream>
+#include <string.h>
 
 void StringLengthWrapper::insert_item(Item * i){
   if(_child){
@@ -286,7 +287,7 @@ double CharDistributionWrapper::get_conf
 // Function object to compare two ItemCount
 namespace std {
   template<>
-    struct std::greater<ItemCount*>
+    struct greater<ItemCount*>
     {
       bool operator()(const ItemCount* left, const ItemCount* right) const
       {   
diff -Naurp syscall_anomaly-1.0-orig/src/provider/bsm/BSMProvider.cpp syscall_anomaly-1.0-ptch/src/provider/bsm/BSMProvider.cpp
--- syscall_anomaly-1.0-orig/src/provider/bsm/BSMProvider.cpp	2003-05-29 23:37:44.000000000 +0000
+++ syscall_anomaly-1.0-ptch/src/provider/bsm/BSMProvider.cpp	2009-12-12 22:29:12.000000000 +0000
@@ -8,6 +8,7 @@
 #include <sys/types.h>
 #include <fcntl.h>
 #include <unistd.h>
+#include <string.h>
 
 #include <anomaly.h>
 
diff -Naurp syscall_anomaly-1.0-orig/src/provider/bsm/BSMProvider.hpp syscall_anomaly-1.0-ptch/src/provider/bsm/BSMProvider.hpp
--- syscall_anomaly-1.0-orig/src/provider/bsm/BSMProvider.hpp	2003-03-25 03:31:37.000000000 +0000
+++ syscall_anomaly-1.0-ptch/src/provider/bsm/BSMProvider.hpp	2009-12-12 22:29:12.000000000 +0000
@@ -6,10 +6,17 @@
 #ifndef __BSM_PROVIDER_HPP
 #define __BSM_PROVIDER_HPP
 
-#if defined(__GNUC__) && __GNUC__ == 3
+#ifdef __GNUC__
+#if __GNUC__ < 3
+#include <hash_map>
+#elif __GNUC__ < 4
 #include <ext/hash_map>
 using namespace __gnu_cxx;
 #else
+#include <ext/hash_map>
+using namespace __gnu_cxx;
+#endif
+#else
 #include <hash_map>
 #endif
 
