diff -urN freefem++-3.4.old/examples++-mpi/mortar-DN-4-mpi.edp freefem++-3.4.new/examples++-mpi/mortar-DN-4-mpi.edp
--- freefem++-3.4.old/examples++-mpi/mortar-DN-4-mpi.edp	2009-07-15 17:19:57.000000000 +0200
+++ freefem++-3.4.new/examples++-mpi/mortar-DN-4-mpi.edp	2009-07-24 15:01:27.000000000 +0200
@@ -1,6 +1,5 @@
 assert(version>=2.23);
-
-if ( mpisize  ) 
+if ( mpisize != 4 ) 
   {
     cout << " sorry number of processeur !=4 " << endl;
     exit(1);
@@ -31,9 +30,20 @@
 if(mpirank==0)
   {
     
-    mesh Thacopy=square(NN,NN);
-    
-    
+    mesh Thacopy; //hack to dcl Tha ouside of mortar-msh.hdp
+    {  
+      include "mortar-msh.hdp"  
+	Thacopy=Tha;
+      regsd=regi;
+    }   
+    Tha=Thacopy;
+    cout << "mortar : " << endl;
+    Thm=Tha;
+    Thm=adaptmesh(Thm,meshsizem,IsMetric=1,thetamax=60);
+    Thm=emptymesh(Thm);       Thmm=Thm;
+    Thmm=trunc(Thm,split=4,1); // for fine integration
+    Thmm=emptymesh(Thmm);
+    plot(Thm,wait=0,ps="mortar-Thm.eps");
   }
 
 // send meshes 
diff -urN freefem++-3.4.old/examples++-mpi/mortar-msh.hdp freefem++-3.4.new/examples++-mpi/mortar-msh.hdp
--- freefem++-3.4.old/examples++-mpi/mortar-msh.hdp	1970-01-01 01:00:00.000000000 +0100
+++ freefem++-3.4.new/examples++-mpi/mortar-msh.hdp	2009-07-24 15:01:40.000000000 +0200
@@ -0,0 +1,42 @@
+// --- begin  meshes  building --------------
+real[int] theta(nbsd+1),cost(nbsd),sint(nbsd);
+
+for (int i=0;i<nbsd;i++)
+ {
+  real t=i*2*pi/nbsd;
+  theta[i]= t;
+  theta[i+1]= (i+1)*2*pi/nbsd;
+  cost[i]=cos(t);
+  sint[i]=sin(t);
+ }
+
+
+border g1(t=0,1){x=cost[0]*t;y=sint[0]*t;label=1;};
+border g2(t=0,1){x=cost[1]*t;y=sint[1]*t;label=1;};
+border g3(t=0,1){x=cost[2]*t;y=sint[2]*t;label=1;};
+border g4(t=0,1){x=cost[3]*t;y=sint[3]*t;label=1;};
+
+border e12(t=theta[0],theta[1]){x=cos(t);y=sin(t);label=labext;};
+border e23(t=theta[1],theta[2]){x=cos(t);y=sin(t);label=labext;};
+border e34(t=theta[2],theta[3]){x=cos(t);y=sin(t);label=labext;};
+border e41(t=theta[3],theta[4]){x=cos(t);y=sin(t);label=labext;};
+
+ int Ng = 5;
+ int Ne = 5 ;
+
+plot(g1(Ng)+g2(Ng)+g3(Ng)+g4(Ng) + e12(Ne) + e23(Ne)+ e34(Ne) + e41(Ne) ,wait=1);
+
+mesh Tha = buildmesh( g1(Ng)+g2(Ng)+g3(Ng)+g4(Ng) + e12(Ne) + e23(Ne)+ e34(Ne) + e41(Ne) );
+
+int [int] regi(4);
+for (int i=0;i<4;i++)
+  {
+    real tt = (theta[i]+theta[i+1])*0.5;
+    regi[i]=Tha(0.5*cos(tt),0.5*sin(tt)).region;
+  }
+
+
+Tha=adaptmesh(Tha,meshsize*3,IsMetric=1,thetamax=60,nbvx=100000);
+Tha=adaptmesh(Tha,meshsize*1.5,IsMetric=1,thetamax=60,nbvx=100000);
+Tha=adaptmesh(Tha,meshsize,IsMetric=1,thetamax=60,nbvx=100000);
+
