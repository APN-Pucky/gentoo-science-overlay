--- src/avbin.c.orig	2009-04-02 12:09:58.000000000 +0100
+++ src/avbin.c	2009-04-02 15:07:10.000000000 +0100
@@ -28,6 +28,7 @@
 #include <libavformat/avformat.h>
 #include <libavcodec/avcodec.h>
 #include <libavutil/avutil.h>
+#include <libswscale/swscale.h>
 
 struct _AVbinFile {
     AVFormatContext *context;
@@ -141,6 +142,7 @@
         free(file->packet);
     }
     av_close_input_file(file->context);
+    free(file);
 }
 
 AVbinResult avbin_seek_file(AVbinFile *file, AVbinTimestamp timestamp)
@@ -215,10 +217,6 @@
                     info->audio.sample_format = AVBIN_SAMPLE_FORMAT_S16;
                     info->audio.sample_bits = 16;
                     break;
-                case SAMPLE_FMT_S24:
-                    info->audio.sample_format = AVBIN_SAMPLE_FORMAT_S24;
-                    info->audio.sample_bits = 24;
-                    break;
                 case SAMPLE_FMT_S32:
                     info->audio.sample_format = AVBIN_SAMPLE_FORMAT_S32;
                     info->audio.sample_bits = 32;
@@ -269,6 +267,7 @@
     if (stream->frame)
         av_free(stream->frame);
     avcodec_close(stream->codec_context);
+    free(stream);
 }
 
 int avbin_read(AVbinFile *file, AVbinPacket *packet)
@@ -334,13 +333,21 @@
 
     avpicture_fill(&picture_rgb, data_out, PIX_FMT_RGB24, width, height);
 
-    /* img_convert is marked deprecated in favour of swscale, don't
-     * be surprised if this stops working the next time the ffmpeg version
-     * is pushed.  Example use of the new API is in ffplay.c. */
-    img_convert(&picture_rgb, PIX_FMT_RGB24, 
-                (AVPicture *) stream->frame, stream->codec_context->pix_fmt,
-                width, height);
-    
+    /* use swscale instead of deprecated img_convert */
+    static struct SwsContext *img_convert_ctx = NULL;
+
+    if (img_convert_ctx == NULL) {
+      img_convert_ctx = sws_getContext(width, height,
+				       stream->codec_context->pix_fmt,
+				       width, height,
+				       PIX_FMT_RGB24, SWS_BICUBIC, NULL, NULL, NULL);
+    }
+
+    sws_scale(img_convert_ctx, stream->frame->data, stream->frame->linesize,
+	      0, height, picture_rgb.data, picture_rgb.linesize);
+
+    /*sws_freeContext(img_convert_ctx);*/
+
     return used;
 }
 
