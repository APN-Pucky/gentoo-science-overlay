From d162fc8efd5151fac4ac865df2b9d67c5f080ad7 Mon Sep 17 00:00:00 2001
From: Peng Tao <tao.peng@emc.com>
Date: Wed, 27 Feb 2013 17:51:46 +0800
Subject: [PATCH 4/6] LU-2850 kernel: 3.7 get/putname uses struct filename

3.7 vfs introduces struct filename and changes getname/putname
parameter to use it.

Signed-off-by: Peng Tao <tao.peng@emc.com>
Change-Id: Ifc3cfa54220b83b8de5aebfa5464c6efa5525599
---
 lustre/autoconf/lustre-core.m4         | 26 ++++++++++++++++++
 lustre/include/linux/lustre_compat25.h | 42 ++++++++++++++++++++++++++++
 lustre/llite/dir.c                     | 50 +++++++++++++++++-----------------
 lustre/llite/llite_internal.h          |  2 +-
 lustre/llite/namei.c                   |  2 +-
 5 files changed, 95 insertions(+), 27 deletions(-)

diff --git a/lustre/autoconf/lustre-core.m4 b/lustre/autoconf/lustre-core.m4
index 579ea17..9a7a458 100644
--- a/lustre/autoconf/lustre-core.m4
+++ b/lustre/autoconf/lustre-core.m4
@@ -2254,6 +2254,31 @@ AC_DEFUN([LC_HAVE_SOCK_ALLOC_FILE],
 ])
 
 #
+# 3.7 vfs introduces struct filename and changes getname/putname
+# parameter to use it
+# see kernel commit adb5c247 and 91a27b2a
+#
+AC_DEFUN([LC_HAVE_STRUCT_FILENAME],
+[AC_MSG_CHECKING([if vfs has struct filename])
+tmp_flags="$EXTRA_KCFLAGS"
+EXTRA_KCFLAGS="-Werror"
+LB_LINUX_TRY_COMPILE([
+	#include <linux/fs.h>
+],[
+	struct filename *filename;
+	filename = getname(NULL);
+	putname(filename);
+],[
+	AC_DEFINE(HAVE_STRUCT_FILENAME, 1,
+		  [vfs has struct filename])
+	AC_MSG_RESULT([yes])
+],[
+	AC_MSG_RESULT([no])
+])
+EXTRA_KCFLAGS="$tmp_flags"
+])
+
+#
 # LC_PROG_LINUX
 #
 # Lustre linux kernel checks
@@ -2436,6 +2461,7 @@ AC_DEFUN([LC_PROG_LINUX],
 	 LC_HAVE_POSIX_ACL_NAMESPACE
 	 LC_HAVE_SOCK_MAP_FD
 	 LC_HAVE_SOCK_ALLOC_FILE
+	 LC_HAVE_STRUCT_FILENAME
 
 	 #
 	 if test x$enable_server = xyes ; then
diff --git a/lustre/include/linux/lustre_compat25.h b/lustre/include/linux/lustre_compat25.h
index d25c168..dcd4a4f 100644
--- a/lustre/include/linux/lustre_compat25.h
+++ b/lustre/include/linux/lustre_compat25.h
@@ -750,4 +750,46 @@ static inline struct dentry *d_make_root(struct inode *root)
 }
 #endif
 
+#ifndef HAVE_STRUCT_FILENAME
+struct filename {
+	char	*name;
+};
+static inline struct filename *ll_getname(const char __user *name)
+{
+	struct filename *filename;
+
+	filename = kmalloc(sizeof(struct filename), GFP_KERNEL);
+	if (filename == NULL)
+		return ERR_PTR(-ENOMEM);
+
+	filename->name = getname(name);
+	if (unlikely(IS_ERR(filename->name))) {
+		int err = PTR_ERR(filename->name);
+		kfree(filename);
+		return ERR_PTR(err);
+	} else {
+		return filename;
+	}
+}
+static inline void ll_putname(struct filename *filename)
+{
+	putname(filename->name);
+	kfree(filename);
+}
+#else
+static inline struct filename *ll_getname(const char __user *name)
+{
+	return getname(name);
+}
+static inline void ll_putname(struct filename *name)
+{
+	if (name->separate) {
+		__putname(name->name);
+		kfree(name);
+	} else {
+		__putname(name);
+	}
+}
+#endif /* !HAVE_STRUCT_FILENAME */
+
 #endif /* _COMPAT25_H */
diff --git a/lustre/llite/dir.c b/lustre/llite/dir.c
index a3a514c..71c5103 100644
--- a/lustre/llite/dir.c
+++ b/lustre/llite/dir.c
@@ -1417,7 +1417,7 @@ free_lmv:
 		RETURN(rc);
 	}
 	case LL_IOC_REMOVE_ENTRY: {
-		char		*filename = NULL;
+		struct filename  *filename = NULL;
 		int		 namelen = 0;
 		int		 rc;
 
@@ -1429,18 +1429,18 @@ free_lmv:
 		if (!(exp_connect_flags(sbi->ll_md_exp) & OBD_CONNECT_LVB_TYPE))
 			return -ENOTSUPP;
 
-		filename = getname((const char *)arg);
+		filename = ll_getname((const char *)arg);
 		if (IS_ERR(filename))
 			RETURN(PTR_ERR(filename));
 
-		namelen = strlen(filename);
+		namelen = strlen(filename->name);
 		if (namelen < 1)
 			GOTO(out_rmdir, rc = -EINVAL);
 
-		rc = ll_rmdir_entry(inode, filename, namelen);
+		rc = ll_rmdir_entry(inode, filename->name, namelen);
 out_rmdir:
-                if (filename)
-                        putname(filename);
+		if (filename)
+			ll_putname(filename);
 		RETURN(rc);
 	}
 	case LL_IOC_LOV_SWAP_LAYOUTS:
@@ -1451,21 +1451,21 @@ out_rmdir:
         case LL_IOC_MDC_GETINFO:
         case IOC_MDC_GETFILEINFO:
         case IOC_MDC_GETFILESTRIPE: {
-                struct ptlrpc_request *request = NULL;
-                struct lov_user_md *lump;
-                struct lov_mds_md *lmm = NULL;
-                struct mdt_body *body;
-                char *filename = NULL;
-                int lmmsize;
-
-                if (cmd == IOC_MDC_GETFILEINFO ||
-                    cmd == IOC_MDC_GETFILESTRIPE) {
-                        filename = getname((const char *)arg);
-                        if (IS_ERR(filename))
-                                RETURN(PTR_ERR(filename));
-
-                        rc = ll_lov_getstripe_ea_info(inode, filename, &lmm,
-                                                      &lmmsize, &request);
+		struct ptlrpc_request *request = NULL;
+		struct lov_user_md *lump;
+		struct lov_mds_md *lmm = NULL;
+		struct mdt_body *body;
+		struct filename *filename = NULL;
+		int lmmsize;
+
+		if (cmd == IOC_MDC_GETFILEINFO ||
+		    cmd == IOC_MDC_GETFILESTRIPE) {
+			filename = ll_getname((const char *)arg);
+			if (IS_ERR(filename))
+				RETURN(PTR_ERR(filename));
+
+			rc = ll_lov_getstripe_ea_info(inode, filename->name,
+						      &lmm, &lmmsize, &request);
                 } else {
                         rc = ll_dir_getstripe(inode, &lmm, &lmmsize, &request);
                 }
@@ -1525,10 +1525,10 @@ out_rmdir:
 
                 EXIT;
         out_req:
-                ptlrpc_req_finished(request);
-                if (filename)
-                        putname(filename);
-                return rc;
+		ptlrpc_req_finished(request);
+		if (filename)
+			ll_putname(filename);
+		return rc;
         }
         case IOC_LOV_GETINFO: {
                 struct lov_user_mds_data *lumd;
diff --git a/lustre/llite/llite_internal.h b/lustre/llite/llite_internal.h
index 6d41614..2ac22b0 100644
--- a/lustre/llite/llite_internal.h
+++ b/lustre/llite/llite_internal.h
@@ -705,7 +705,7 @@ struct lookup_intent *ll_convert_intent(struct open_intent *oit,
                                         int lookup_flags);
 #endif
 struct dentry *ll_splice_alias(struct inode *inode, struct dentry *de);
-int ll_rmdir_entry(struct inode *dir, char *name, int namelen);
+int ll_rmdir_entry(struct inode *dir, const char *name, int namelen);
 
 /* llite/rw.c */
 int ll_prepare_write(struct file *, struct page *, unsigned from, unsigned to);
diff --git a/lustre/llite/namei.c b/lustre/llite/namei.c
index 1477790..11daf0c 100644
--- a/lustre/llite/namei.c
+++ b/lustre/llite/namei.c
@@ -1146,7 +1146,7 @@ static int ll_rmdir_generic(struct inode *dir, struct dentry *dparent,
 /**
  * Remove dir entry
  **/
-int ll_rmdir_entry(struct inode *dir, char *name, int namelen)
+int ll_rmdir_entry(struct inode *dir, const char *name, int namelen)
 {
 	struct ptlrpc_request *request = NULL;
 	struct md_op_data *op_data;
-- 
1.8.1.5

