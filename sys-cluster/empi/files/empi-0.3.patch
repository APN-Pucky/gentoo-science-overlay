diff -urN a/empi b/empi
--- a/empi	2008-03-26 20:24:05.000000000 -0400
+++ b/empi	2008-03-26 21:08:10.000000000 -0400
@@ -1,16 +1,8 @@
 #!/bin/bash
+VERSION=0.3
 
 source /etc/init.d/functions.sh
-#[ -f /etc/empi.conf ] && source /etc/empi.conf
-MPI_IMPS="openmpi lam-mpi"
-MPI_ALL_IMPS="mpich mpich2 openmpi lam-mpi"
-VERBOSE=0
-
-[[ -z ${MPI_PORTDIR} ]] \
-    && MPI_PORTDIR="$(portageq portdir_overlay)" \
-    && MPI_PORTDIR="${MPI_PORTDIR%% *}" \
 
-[[ -z ${COMPILER} ]] && COMPILER=gcc
 # imp (category)        Implementation we're installing for.  mpi-*
 # targets               Packages to run action on.  When creating, the implementation to use.
 # action                create, add, update, remove.
@@ -26,20 +18,33 @@
     local rc=${1:-0}
     shift
 cat <<-EOF
-Usage: ${HILITE}empi${NORMAL} ${GOOD}[options]${NORMAL} ${BRACKET}--implementation IMPLEMENTATION pkgspec${NORMAL} 
+empi-${VERSION}
+Usage: ${HILITE}empi${NORMAL} ${GOOD}[actions]${NORMAL} ${BRACKET}[options]${NORMAL} 
 
-Options:
-    ${GOOD}-c, --create${NORMAL}                (Re)Initialize setup for implementation.
+Actions:
+    ${GOOD}-c, --create${NORMAL} pkgspec        (Re)Initialize setup for implementation.
     ${GOOD}-a, --add${NORMAL} pkgspec(s)        Add packages using specified implementation.
-    ${GOOD}-i, --implementation${NORMAL} imp    Implementation to use.
-    ${GOOD}-l, --list${NORMAL}                  List installed implementations.
-    ${GOOD}-t, --tree${NORMAL} path             Path to portage tree to use ebuilds from.
     ${GOOD}-d, --delete${NORMAL} imp            Remove everything related to specified implementation.
 
-pkgspec is specified by a package string.  Without a version, the best_visible is used.
-    openmpi, sys-cluster/openmpi, =sys-cluster/openmpi-1.2.5
-implementation (-i) is user defined but must be prefixed with "mpi-"
+Options:
+    ${GOOD}-i, --implementation${NORMAL} imp    Implementation to use.
+    ${GOOD}-t, --tree${NORMAL} path             Path to portage tree to use ebuilds from.
+    ${GOOD}-o, --overlaydir${NORMAL} path       Directory to use for the empi portage overlay.
+    ${GOOD}    --noemerge${NORMAL}              Do not call emerge, only preform overlay setup.
 
+Notes:
+    ${HILITE}-${NORMAL} pkgspec is specified by a package string.  Without a version, the 
+      portageq best_visible is used.  For example, all of the following
+      are valid: openmpi, sys-cluster/openmpi, =sys-cluster/openmpi-1.2.5.
+    ${HILITE}-${NORMAL} implementation (-i) is user defined but must be prefixed with "mpi-"
+
+Examples:
+${BRACKET}Create a new implementation based on openmpi.${NORMAL}
+    empi --create sys-cluster/openmpi --implementation mpi-ompi
+${BRACKET}Rebuild the above.${NORMAL}
+    emerge mpi-ompi/openmpi
+${BRACKET}Add hpl to mpi-ompi${NORMAL}
+    empi --implementation mpi-ompi --add sys-cluster/hpl
 EOF
     [[ -n $* ]] && echo && eerror "Error: $*"
     exit ${rc}
@@ -101,7 +106,7 @@
         fi
 
         if ! grep "[>=<]*${imp}/${atom[1]}" ${gfiles} &>/dev/null; then
-            grep "[>=<]*${atom[0]}/${atom[1]}" ${gfiles} \
+            grep "[>=<]*${atom[0]}/${atom[1]}" ${gfiles} 2>/dev/null \
                 | sed "s,${atom[0]},${imp}," \
             | while read line; do
                echo "${line}" >> ${f}
@@ -150,19 +155,14 @@
     grep 'inherit .*mpi' "${1}/${2##*/}.ebuild" &>/dev/null
 }
 
-setup_portage_vars() {
-    export PORTDIR_OVERLAY="${MPI_PORTDIR} $(portageq portdir_overlay)"
-    export PKGDIR="$(portageq envvar PKGDIR)/mpi/${imp}"
-}
-
 link_ebuild_dir() {
     ln -snf "${ebuild_dir}" "${MPI_PORTDIR}"/${imp}/${ebuild_dir##*/} \
         || die "Failed to link ${ebuild_dir} to ${MPI_PORTDIR}/${imp}/${ebuild_dir##*/}"
 }
 
 do_emerge() {
+    [[ ${DO_EMERGE} -eq 0 ]] && return 0
     ebegin "Emerging $*"
-    setup_portage_vars
     emerge ${emerge_opts} $* || die "emerge failed!"
     eend 
 }
@@ -172,7 +172,11 @@
     local mpi_imp_pkg d mpi_imp_pn
 
     [[ ${#targets[@]} -ne 1 ]] && die "Can only create one implementation at a time."
-    
+
+    for d in $(eselect mpi list -p); do
+        [ "${d}" == "${imp}" ] && die "${imp} has already been created."
+    done
+     
     # Prevent laziness
     [[ ${targets[0]} == ${targets[0]##*/} ]] \
         && targets[0]="sys-cluster/${targets[0]}"
@@ -187,7 +191,7 @@
     # Refuse to break systems.  If there is already an implementation
     # installed in that directory, we're not going to add another one as
     # the eclass doesn't fix one problem just to introduce a bigger one.
-    for d in $(find ${MPI_PORTDIR}/${imp} -maxdepth 1 -mindepth 1 -type l);do
+    for d in $(find ${MPI_PORTDIR}/${imp} -maxdepth 1 -mindepth 1 -type l 2>/dev/null);do
         d=${d##*/}
         [[ ${d} == ${mpi_imp_pn} ]] && continue
         for i in ${MPI_ALL_IMPS}; do
@@ -197,7 +201,7 @@
     done
 
     if [[ -d "${MPI_PORTDIR}"/${imp} ]]; then
-        [[ ${VERBOSE} -ne 0 ]] && ewarn "${imp} has already been created."
+        [[ ${VERBOSE} -ne 0 ]] && ewarn "Overlay for ${imp} has already been created."
     else
         mkdir -p ${MPI_PORTDIR}/${imp}
         link_ebuild_dir
@@ -258,40 +262,56 @@
 
 
 delete_implementation() {
-    local pkgs=( $(ls /var/db/pkg/${imp}/) )
-    local ext d i
+    local pkgs=( $(ls /var/db/pkg/${imp}/ 2>/dev/null) )
+    local ext d i rc
     [[ -d "${MPI_PORTDIR}"/${imp} ]] || die "Implementation ${imp} has not been created yet."
+    rc=0
    
     for (( i=0; i<${#pkgs[@]}; i++)); do
         pkgs[i]="=${imp}/${pkgs[i]}"
     done
 
-    if ! emerge -C ${emerge_opts/-u/} ${pkgs[@]}; then
+    if [[ ${#pkgs[@]} -gt 0 ]] && ! emerge -C ${emerge_opts/-u/} ${pkgs[@]}; then
         die "Failed to unmerge ${pkgs[@]}"
     fi
 
     for ext in "keywords" "use"; do
         if [ -d /etc/portage/package.${ext} ]; then
             rm /etc/portage/package.${ext}/${imp} &>/dev/null
-        else
+            rc=$((rc+$?))
+        elif [ -f /etc/portage/package.${ext} ]; then
             sed -i -e "/${imp}\//d" /etc/portage/package.${ext}
+            rc=$((rc+$?))
         fi
     done
-    sed -i -e "/^${imp}$/d" /etc/portage/categories
 
-    for d in $(ls "${MPI_PORTDIR}"/${imp}/); do
+    [ ! -f /etc/portage/categories ] || sed -i -e "/^${imp}$/d" /etc/portage/categories
+    rc=$((rc+$?))
+   
+   for d in $(ls "${MPI_PORTDIR}"/${imp}/ 2>/dev/null); do
         rm "${MPI_PORTDIR}"/${imp}/${d}
+        rc=$((rc+$?))
+    done
+
+    for d in "${MPI_PORTDIR}/${imp}" /var/db/pkg/${imp}; do
+        [ ! -d "${d}" ] || rmdir "${d}"
+        rc=$((rc+$?))
     done
-    rmdir "${MPI_PORTDIR}"/${imp}
-    rmdir /var/db/pkg/${imp}
+
+    [[ ${rc} -ne 0 ]] \
+        && ewarn "Errors were encountered during delete_implementation()"
+    return ${rc}
 }
 
 
 [[ ${UID} -ne 0 ]] && die "You must be root."
+DO_EMERGE=1
+VERBOSE=0
 targets=""
-emerge_opts="-u -a -v"
+emerge_opts="-u"  # Packages can be recompiled by hand if necessary.
 portage_tree=""
 action=""
+
 while [[ $# -gt 0 ]]; do
     case $1 in
         -h|--help)
@@ -307,8 +327,12 @@
             shift; imp=${1};;
         -t|--tree)
             shift; portage_tree=${1};;
+        -o|--overlaydir)
+            shift; MPI_PORTDIR=${1};;
         -v|--verbose)
             VERBOSE=1;;
+        --noemerge)
+            DO_EMERGE=0;;
         -*)
             emerge_opts="${emerge_opts} ${1}";;
         *)
@@ -317,6 +341,18 @@
     shift
 done
 
+if [ -z "${MPI_PORTDIR}" ]; then
+    MPI_PORTDIR="$(portageq portdir_overlay)"
+    MPI_PORTDIR="${MPI_PORTDIR%% *}"
+fi
+
+if [ ! -d "${MPI_PORTDIR}" ]; then
+    mkdir -p "${MPI_PORTDIR}" || die "Failed to mkdir ${MPI_PORTDIR}"
+fi
+
+export PORTDIR_OVERLAY="${MPI_PORTDIR} $(portageq portdir_overlay)"
+export PKGDIR="$(portageq envvar PKGDIR)/mpi/${imp}"
+
 [[ -z ${action} ]] && usage 1 "No action defined."
 [[ -z ${imp} ]] && usage 1 "No implementation defined."
 imp_is_valid
