# Copyright 1999-2012 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# $Header: $

EAPI=4

inherit eutils multilib unpacker versionator

DESCRIPTION="NVIDIA CUDA Toolkit"
HOMEPAGE="http://developer.nvidia.com/cuda"

CUDA_V=${PV//_/-}
DIR_V=${CUDA_V//./_}
DIR_V=${DIR_V//beta/Beta}

BASE_URI="http://developer.download.nvidia.com/compute/cuda/${DIR_V}/rel/toolkit"
SRC_URI="
	amd64? ( ${BASE_URI}/cudatoolkit_${CUDA_V}.9_linux_64_ubuntu11.04.run )
	x86? ( ${BASE_URI}/cudatoolkit_${CUDA_V}.9_linux_32_ubuntu11.04.run )"

LICENSE="NVIDIA"
SLOT="0"
KEYWORDS="~amd64 ~x86 ~amd64-linux ~x86-linux"
IUSE="debugger doc profiler"

DEPEND=""
RDEPEND="${DEPEND}
	>=sys-devel/binutils-2.20
	>=sys-devel/gcc-4.5
	debugger? ( >=sys-libs/libtermcap-compat-2.0.8-r2 )
	!<=x11-drivers/nvidia-drivers-270.41"

S="${WORKDIR}"

QA_PREBUILT="
	opt/cuda/*"

src_install() {
	local cudadir=/opt/cuda

	into ${cudadir}
	dobin bin/* nvvm/*
	# use explicit lib64 because of amd64-linux prefix which uses lib
	use amd64 && dolib lib64/*
	use x86 && dolib lib/*

	if ! use debugger; then
		rm -f "${ED}"/${cudadir}/bin/cuda-gdb
	else
		insinto ${cudadir}/extras
		doins -r extras/Debugger
	fi

	if use profiler; then
		# TODO: Use system JRE for the profiler?
		insinto ${cudadir}
		doins -r libnvvp
		fperms a+x \
			${cudadir}/libnvvp/nvvp \
			${cudadir}/libnvvp/jre/bin/* \
			${cudadir}/libnvvp/*.so

		cat > "${T}"/nvv <<- EOF
			#!/bin/sh
			LD_LIBRARY_PATH=\${LD_LIBRARY_PATH}:${EPREFIX}${cudadir}/lib:${EPREFIX}${cudadir}/lib64 "${EPREFIX}"${cudadir}/libnvvp/nvvp
		EOF
		dobin "${T}"/nvv
		insinto ${cudadir}/extras
		doins -r extras/CUPTI
	fi

	chmod a-x "${ED}"/${cudadir}/bin/{nvcc.profile,ci_include.h}

	# TODO: Manuals are missing from this release. Remove the following
	# commented-out lines if they are not restored in the next releases.
	# doman does not respect cudadirTREE
	#insinto ${cudadir}/man/man1
	#doins man/man1/*
	#insinto ${cudadir}/man/man3
	#doins man/man3/*
	#prepman ${cudadir}

	insinto ${cudadir}/include
	doins -r include/*

	insinto ${cudadir}/src
	doins src/*

	if use doc; then
		insinto ${cudadir}/doc
		doins -r doc/*
	fi

	cat > "${T}"/99cuda <<- EOF
		PATH=${EPREFIX}${cudadir}/bin:${EPREFIX}${cudadir}/libnvvp
		ROOTPATH=${EPREFIX}${cudadir}/bin
		LDPATH=${EPREFIX}${cudadir}/$(get_libdir)
		MANPATH=${EPREFIX}${cudadir}/man
	EOF
	doenvd "${T}"/99cuda

	export CONF_LIBDIR_OVERRIDE="lib"
	# HACK: temporary workaround until CONF_LIBDIR_OVERRIDE is respected.
	export LIBDIR_amd64="lib"

	into ${cudadir}/open64
	dobin open64/bin/*
	libopts -m0755
	dolib open64/lib/*
}

pkg_postinst() {
	elog "If you want to natively run the code generated by this version of the"
	elog "CUDA toolkit, you will need >=x11-drivers/nvidia-drivers-260.19.21."
	elog ""
	elog "Run 'env-update && . ${EROOT}etc/profile' before using the CUDA toolkit. "
}
