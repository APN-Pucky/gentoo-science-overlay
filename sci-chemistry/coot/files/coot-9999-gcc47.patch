Index: utils/coot-utils.cc
===================================================================
--- utils/coot-utils.cc	(revision 4235)
+++ utils/coot-utils.cc	(working copy)
@@ -28,6 +28,7 @@
 #include <stdexcept> // for string_to_int.
 #include <sstream>   // ditto.
 #include <cstdio>    // 20090806 Justin Lecher says we need this on Gentoo 
+#include <unistd.h>
 
 #include "coot-sysdep.h"
 #if defined _MSC_VER
Index: coot-utils/coot-coord-utils.cc
===================================================================
--- coot-utils/coot-coord-utils.cc	(revision 4235)
+++ coot-utils/coot-coord-utils.cc	(working copy)
@@ -196,7 +196,7 @@
       clipper::Coord_frac cf = coot::util::shift_to_origin(mol);
       clipper::Coord_orth co = cf.coord_orth(csp.first);
       for(int imod = 1; imod<=mol->GetNumberOfModels(); imod++) {
-	 int imod = 1;
+//	 int imod = 1;
 	 CModel *model_p = mol->GetModel(imod);
 	 CChain *chain_p;
 	 int nchains = model_p->GetNumberOfChains();
@@ -2779,7 +2779,7 @@
    short int whole_res_flag = 1;
 
    for(int imod = 1; imod<=mol_in->GetNumberOfModels(); imod++) {
-     int imod = 1;
+//     int imod = 1;
      CModel *model_p = mol_in->GetModel(imod);
      CModel *new_model_p = new CModel;
      int nchains = model_p->GetNumberOfChains();
Index: src/molecule-class-info-residues.cc
===================================================================
--- src/molecule-class-info-residues.cc	(revision 4235)
+++ src/molecule-class-info-residues.cc	(working copy)
@@ -145,7 +145,7 @@
 
    int r = 0;
    for(int imod = 1; imod<=atom_sel.mol->GetNumberOfModels(); imod++) {
-      int imod = 1;
+//      int imod = 1;
       CModel *model_p = atom_sel.mol->GetModel(imod);
       CChain *chain_p;
       // run over chains of the existing mol
