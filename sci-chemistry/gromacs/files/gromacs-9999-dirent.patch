From e61c3be6a0bf0cdc4c21ac1b32d4fc546f2733c1 Mon Sep 17 00:00:00 2001
From: Alexey Shvetsov <alexxy@omrb.pnpi.spb.ru>
Date: Thu, 18 Feb 2010 17:33:05 +0300
Subject: [PATCH] Fix detection and usage of dirent.h

---
 configure.ac           |    5 +++++
 src/kernel/fflibutil.c |    4 ++--
 2 files changed, 7 insertions(+), 2 deletions(-)

diff --git a/configure.ac b/configure.ac
index 08e00c9..32eefe1 100644
--- a/configure.ac
+++ b/configure.ac
@@ -651,6 +651,11 @@ Selections still work, but the default groups can differ from
 those obtained with regular expressions enabled.
 Consider installing the regular expression library from GNU libc.])])
 
+#######################################################################
+# Check for dirent.h
+#######################################################################
+AC_CHECK_HEADERS([dirent.h],,AC_DEFINE([HAVE_DIRENT_H]))
+
 #####
 # Checks for additional and/or optional functions or libraries.
 #AC_FUNC_MALLOC
diff --git a/src/kernel/fflibutil.c b/src/kernel/fflibutil.c
index ecab646..5b9e51a 100644
--- a/src/kernel/fflibutil.c
+++ b/src/kernel/fflibutil.c
@@ -147,7 +147,7 @@ static int low_fflib_search_file_end(const char *ffdir,
                                      char ***filenames,
                                      char ***filenames_short)
 {
-#ifndef HAVE_DIRENT
+#ifndef HAVE_DIRENT_H
     gmx_fatal(FARGS,"lib_search_file_end called while the 'dirent' functionality is not available on this system");
     return 0;
 #else
@@ -296,7 +296,7 @@ int fflib_search_file_end(const char *ffdir,const char *file_end,
 int fflib_search_file_in_dirend(const char *filename,const char *dirend,
                                 char ***dirnames)
 {
-#ifndef HAVE_DIRENT
+#ifndef HAVE_DIRENT_H
     gmx_fatal(FARGS,"lib_search_file_in_dirend called while the 'dirent' functionality is not available on this system");
     return 0;
 #else
-- 
1.7.0

